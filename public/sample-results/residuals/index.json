{
  "stats": {
    "suites": 40,
    "tests": 40,
    "passes": 27,
    "pending": 0,
    "failures": 13,
    "testsRegistered": 40,
    "passPercent": 67.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-05-19T15:27:08.728Z",
    "end": "2025-05-19T16:21:27.315Z",
    "duration": 3258587
  },
  "results": [
    {
      "uuid": "5d6a3ff2-7b40-4b96-9007-0acd8429039b",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2677ff14-be9f-41da-a8ff-c7733d1e5a1e",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001",
              "fullTitle": "Residual TC001",
              "timedOut": null,
              "duration": 31214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n\"1. Products Creation:\n•Search for Customer: Skydance Media\n•Click on any Series ID\n•Click on Any Season Number\n•Select/Click on any Product ID [I selected 12672-04-00120]\n•Click on \"CLONE\" button [Enter Episode Name, Episode Number, Principal Photog Date, WGA Contact Date and click on Update Product]\n•Click on “Update Product”\n•Go to \"Cast List\" tab and make sure that all are attached\n•Product Master Tab - Checked the checkbox for Sent to Client, Approved By client BOX and clicked the “Update Product” button.\n•Go to the \"Cast List” tab, scroll down all day to the \"SAG-AFTRA\" section.\n•Click on \"Calculate Prorata\"\n•Once it done calculating then click on VIEW then click on “Prorara Shares” tab and make sure that rates are available.\n•All the way on the top right click on \"Return to Cast List\"\n•Now go to the \"SAG-AFTRA\" Section and click on the LOCK option.\n•Now go to the \"Product Master\" tab and copy the PROD ID.\nExpected: -\n*/\n// Navigate to residual product page\ncy.visit('resid/residuals-search');\n// Verify product master grid is visible before interacting\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\n// Enter product ID in input field\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').clear();\ncy.get('[data-cy=\"product-id-input\"]').type('17739-01-000101', { delay: 200 });\n// Click on Search button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible').contains('Search').click({ force: true });\n// Verify the product ID exists in the search results and click on it\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"0\"] a') // NODATACY\n    .should('exist')\n    .and('contain', '17739-01-000101')\n    .invoke('removeAttr', 'target')\n    .click({ force: true });\n// Verify that the Episode Name field is populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Click on the Clone button\ncy.contains('Clone', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true }); // NODATACY\n// Read episode data from a fixture file\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Clear and enter new episode name\n    cy.get('input[name=\"EpisodeName\"]', { timeout: 90000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').click({ force: true });\n    cy.get('input[name=\"EpisodeName\"]').type('Testing Adventure', { delay: 300 });\n    // Clear and enter new episode number\n    cy.get('input[name=\"EpisodeNumber\"]', { timeout: 50000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeNumber\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    // Generate and enter a random season number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900); // Generates a random 3-digit number (100-999)\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    // Enter Principal Photo Date\n    cy.get('[data-cy=\"principal-photo-date\"]', { timeout: 50000 }).should('be.visible');\n    cy.get('input#datepicker-1').clear(); // NODATACY\n    cy.get('input#datepicker-1').type('06/03/2015');\n    cy.get('input#datepicker-1').blur();\n    // Enter WGA Contact Date\n    cy.get('input#datepicker-3').clear(); // NODATACY\n    cy.get('input#datepicker-3').type('07/30/2025');\n    cy.get('input#datepicker-3').blur();\n    // Click on Update Product button\n    cy.contains('Update Product', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n});\n// Verify that product was updated successfully\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.reload();\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Navigate to Cast List tab\ncy.get('[class=\"nav-link\"]', { timeout: 80000 })\n    .contains('Cast List', { timeout: 80000 })\n    .should('be.visible')\n    .click({ force: true }); // NODATACY\n// Verify Employee ID column is present in Cast List\ncy.get('[role=\"columnheader\"]', { timeout: 50000 }).contains('Employee Id', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to Product Master tab\ncy.get('[class=\"nav-link\"]', { timeout: 50000 }) // NODATACY\n    .contains('Product Master', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Episode Name field is still populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Check checkboxes for \"Sent to Client\" and \"Approved by Client\"\ncy.get('input[name=\"productMaster.sentToClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\ncy.get('input[name=\"productMaster.approvedByClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\n// Click on Update Product button again\ncy.contains('Update Product', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify product update confirmation\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.reload();\n// Navigate back to Cast List\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Cast List', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Locate SAG-AFTRA section and click on Calculate Prorata\ncy.contains('SAG-AFTRA', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify prorata shares were calculated successfully\ncy.contains('Prorata shares calculated successfully.', { timeout: 90000 }).should('be.visible'); // NODATACY\n//choose one of the cast\ncy.get('[class=\"fa fa-edit\"]:first', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Birth Date and Name fields are visible\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Birth Date', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Name', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Navigate to Prorata Shares tab\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Prorata Shares', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Prorata Shares section is visible\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 90000 }).should('be.visible');\n// Click Update, Guild, and Return to Cast List\ncy.contains('Update', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains(' Return to Cast List ', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Employee ID column and Calculate Prorata  is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Ensure the 'Lock' button for 'SAG-AFTRA' is visible and click\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock', { timeout: 50000 }).should('be.visible'); // NODATACY\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock').click({ force: true }); // NODATACY\n// Ensure the 'Unlock' button appears after locking, confirming the lock action\ncy.contains('Unlock', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to the 'Product Master'\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }) // NODATACY\n    .contains('Product Master', { timeout: 30000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify the 'EpisodeName' input field is visible and not empty\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Retrieve the 'productID' from the input field and save it to a JSON file\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.k-list-item`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.k-list-item`, but never found it.\n    at Context.eval (webpack:///../../../../libs/utils/src/lib/kendo-commands.ts:9:0)",
                "diff": null
              },
              "uuid": "7d2cb56c-d995-4fe5-8738-23121e81a379",
              "parentUUID": "2677ff14-be9f-41da-a8ff-c7733d1e5a1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7d2cb56c-d995-4fe5-8738-23121e81a379"
          ],
          "pending": [],
          "skipped": [],
          "duration": 31214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ea8e958-938c-45a8-bfac-3f7bc9f8f325",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC002.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC002.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "895ef59a-3e35-48d9-a7c8-52f7ef36a3df",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC002.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC002.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC002",
              "fullTitle": "Residual TC002",
              "timedOut": null,
              "duration": 48764,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\n    Module: Residual - Revenue and Usage Log\n    Last Updated : Syed (25/2/2025)\n    High Level Test Steps:\n    2. Revenue and Usage Log\n    •Click on “+ Upload Financial Data” button\n    •Select “ITD Revenue” option\n    •Download Template\n    •Open Template\n    •Enter Customer ID (176731), Product ID (Residual Details screen – latest created a product), Reuse Market (For testing purpose – delete row from 3 to 19), Gross ITD amounts (I am not changing, keeping 50000 as it is), EST Units(Not changing, keeping 45000 as it is), and Period End Date (Go to admin screen and use that date - 3/31/2020)\n    •Now go back to Revenue and Usage Log screen\n    •Click on “+ Upload Financial Data” button\n    •Select “ITD Revenue” option\n    •This time upload the file – Click on “Select File”, select the file that saved and Click on upload button.\n    •If there is no error on the file, it will display a summary of the file.\n    •Select the file.\n    •Click on the “Approve” button.\n    Expected: -\n    */\n//Go to revenue page\ncy.visit('resid/financial-data/revenue');\n// Verify 'Upload Financial' button is visible\ncy.contains('Upload Financial', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Click on 'Financial' to proceed\ncy.contains('Financial').click(); // NODATACY\n// Ensure the Revenue Type selection screen is visible\ncy.contains(' Please select the Revenue Type to upload ', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Ensure radio buttons for revenue type selection are visible\ncy.get('input[type=\"radio\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Select the first available revenue type option\ncy.get('input[type=\"radio\"]').first().check(); // NODATACY\n// Verify that the file selection input is visible\ncy.contains(' Select file... ', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Load product data from a fixture file\ncy.fixture('product-data.json').then((productData) => {\n    cy.fixture('ITDRevenueTemplate.csv', 'utf8').then((csvData) => {\n        // Split CSV into rows\n        const rows = csvData.split('\\n');\n        // Extract header row and data rows\n        const headers = rows[0].split(','); // Ensure correct delimiter\n        const dataRows = rows.slice(1);\n        // Find the index of the \"Product ID\" column\n        const productIdIndex = headers.findIndex((header) => header.trim() === 'Product ID');\n        if (productIdIndex === -1) {\n            throw new Error('Product ID column not found in CSV.');\n        }\n        // Process each row and replace Product ID values\n        const updatedDataRows = dataRows.map((row) => {\n            const columns = row.split(','); // Ensure correct delimiter\n            // Ensure row is not empty before processing\n            if (columns.length > 1 && columns.some((value) => value.trim() !== '')) {\n                console.log(`Replacing ${columns[productIdIndex]} with ${(productData === null || productData === void 0 ? void 0 : productData.productId) || 'N/A'}`);\n                columns[productIdIndex] = (productData === null || productData === void 0 ? void 0 : productData.productId) || columns[productIdIndex]; // Update Product ID safely\n            }\n            return columns.join(','); // Reconstruct the row\n        });\n        // Combine headers and updated rows\n        const updatedCsv = [headers.join(','), ...updatedDataRows].join('\\n');\n        // Write the modified CSV back to a file\n        cy.writeFile('src/fixtures/UpdatedITDRevenueTemplate.csv', updatedCsv);\n    });\n});\n// Attach the updated CSV file for upload\ncy.fixture('UpdatedITDRevenueTemplate.csv', 'base64').then((fileContent) => {\n    cy.get('input[type=\"file\"]').attachFile({\n        fileContent,\n        fileName: 'UpdatedITDRevenueTemplate.csv',\n        mimeType: 'text/csv',\n        encoding: 'base64'\n    });\n});\n// Verify the uploaded file is displayed\ncy.contains('UpdatedITDRevenueTemplate.csv', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Ensure the 'Upload' button is visible and click it\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Upload', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Upload').click();\n// Verify successful file upload message\ncy.contains(' Total records uploaded - 1 ', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Check the master checkbox to select all records\ncy.get('#mastercheckbox').check({ force: true }); // NODATACY\n// Click on the 'Approve' button to finalize the upload process\ncy.get('[class=\"btn btn-primary ng-star-inserted\"]', { timeout: 30000 }).contains('Approve').click({ force: true }); // NODATACY\n// Verify the success message for status update\ncy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible'); // NODATACY",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find content: ' Total records uploaded - 1 ' but never did.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find content: ' Total records uploaded - 1 ' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC002.cy.ts:88:70)",
                "diff": null
              },
              "uuid": "7f68f784-a6c7-4fdb-905c-523e2c7a8520",
              "parentUUID": "895ef59a-3e35-48d9-a7c8-52f7ef36a3df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7f68f784-a6c7-4fdb-905c-523e2c7a8520"
          ],
          "pending": [],
          "skipped": [],
          "duration": 48764,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "21957ca2-6eae-4d4f-826a-5c8d990ea895",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC003.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC003.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3a02d7e4-acbf-43e1-8a10-b394c5c80008",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC003.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC003.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC003",
              "fullTitle": "Residual TC003",
              "timedOut": null,
              "duration": 46948,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Triggers\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n3. Triggers\n• Enter Project ID that you have created\n• Click on Search\n• You will be able to see the file you have uploaded.\n• If the ITD amounts are correct then click on the “Approve\n\nExpected: -\n*/\n// Retrieve Product ID from fixture file\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId;\n    // navigateToTrigger\n    cy.visit('resid/trigger-search/revenuetriggers');\n    // Verify that the \"Add Adjustments\" button is visible on the page\n    cy.get('[data-cy=\"add-adjustments-btn\"]', { timeout: 30000 }).should('be.visible');\n    // Verify that the Product ID input field is visible,   input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    // Verify that the checkbox is visible, then check\n    cy.get('#k-grid0-checkbox0', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('#k-grid0-checkbox0').check();\n    // Verify that the approve button is visible, click\n    cy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"approve-btn\"]').click({ force: true });\n    // Verify that the status update confirmation message is displayed\n    cy.contains(' Status Updated successfully. ', { timeout: 30000 }).should('be.visible'); // NODATACY\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `#k-grid0-checkbox0`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `#k-grid0-checkbox0`, but never found it.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC003.cy.ts:37:59)",
                "diff": null
              },
              "uuid": "27023df9-b532-41b8-a7e4-5c4c50bf9d3f",
              "parentUUID": "3a02d7e4-acbf-43e1-8a10-b394c5c80008",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "27023df9-b532-41b8-a7e4-5c4c50bf9d3f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 46948,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "41f52906-a026-4393-a8f6-c8ca419c5c3f",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC004.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC004.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e19fbce-7e32-4883-9595-77286e8f4517",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC004.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC004.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC004",
              "fullTitle": "Residual TC004",
              "timedOut": null,
              "duration": 94520,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Obligations\nLast Updated: Syed (24/02/2025)\nHigh Level Step:\n4. Obligations\n•Enter Project ID that you have created\n•Click on Search\n•You will be able to see obligations for SAG-AFTRA\n•Select all lines and click on the “Approve” button.\nExpected: */\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //  navigate To Obligations\n    cy.visit('resid/guild-obligations/financeobligations');\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, then click\n    cy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-button\"]').click();\n    // Verify that the finance obligations grid is visible\n    cy.get('[data-cy=\"finance-obligations-grid\"]', { timeout: 30000 }).should('be.visible');\n    // Ensure that the expected obligation record appears\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Select all records in the grid by checking the master checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Verify that the \"Approve\" button is visible, then clcik\n    cy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"btn btn-primary\"]').contains('Approve').click({ force: true }); // NODATACY\n    // Verify that the success message confirming the update is displayed\n    cy.contains('Record(s) Updated', { timeout: 30000 }).should('be.visible'); // NODATACY\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC004.cy.ts:34:55)",
                "diff": null
              },
              "uuid": "6fbb9079-071f-4b81-95ff-ba8f97ffb260",
              "parentUUID": "8e19fbce-7e32-4883-9595-77286e8f4517",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6fbb9079-071f-4b81-95ff-ba8f97ffb260"
          ],
          "pending": [],
          "skipped": [],
          "duration": 94520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "457be1b3-ec41-4bb6-b977-4904d49c5e6c",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC005.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC005.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5fc1029b-5c7f-4c88-91c2-d4788773e9b1",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC005.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC005.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC005",
              "fullTitle": "Residual TC005",
              "timedOut": null,
              "duration": 94459,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/* Module: Residuals - Payments\n   Last Updated: Syed (24/02/2025)\n   High Level Step:\n   5. Payments\n    •Enter Project ID that you have created\n    •Click on Search\n    •Select one line and double click on “Voucher ID”. Make sure that Pension amount has been calculated.\n    •Now select all the lines and click on the “Invoice” button.\n   Expected: */\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //navigate To Payments\n    cy.visit('resid/residuals-payment');\n    // Verify the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    // Verify the expected record appears in the results\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Select the first checkbox in the grid\n    cy.get('#k-grid0-checkbox0').check({ force: true }); // NODATACY\n    // Double-click the first Voucher ID cell to open the details popup\n    cy.get('td[data-kendo-grid-column-index=\"6\"]') // Selects the cell containing the Voucher ID\n        .first() // Ensures Cypress interacts only with the first row\n        .dblclick(); // NODATACY\n    // Verify the voucher details table is visible\n    cy.get('[class=\"thead-default thead-sm\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Ensure the voucher details table contains valid data\n    cy.get('div.k-window-content table tbody tr') // NODATACY\n        .should('be.visible')\n        .first()\n        .find('td')\n        .eq(9)\n        .should('exist')\n        .invoke('text')\n        .then((text) => {\n        expect(text.trim()).not.to.be.empty;\n    });\n    // Close the voucher details popup\n    cy.get('button[title=\"Close\"]').click({ force: true }); // NODATACY\n    cy.get('.k-window.k-dialog').invoke('remove');\n    cy.get('.k-overlay').invoke('attr', 'style', 'display: none;');\n    // Select all records using the master checkbox\n    cy.get('#mastercheck').check({ force: true }); // NODATACY\n    // Verify the \"Invoice\" button is visible, click\n    cy.get('[data-cy=\"invoice-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"invoice-btn\"]').click({ force: true });\n    // Confirm the success message for batch creation\n    cy.contains(' Vouchers are in the process of being Invoiced. Batch created successfully. Please check the Batch after some time once processing is complete. ', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Verify the batch ID column is visible\n    cy.get('td[data-kendo-grid-column-index=\"18\"]', { timeout: 30000 }).first().should('be.visible'); // NODATACY\n    // Extract and validate the Batch ID\n    cy.get('td[data-kendo-grid-column-index=\"18\"]', { timeout: 30000 })\n        .first()\n        .invoke('text')\n        .should('not.be.empty', { timeout: 30000 }); // NODATACY\n    // Store the Batch ID in a fixture file for future use\n    cy.get('td[data-kendo-grid-column-index=\"18\"]') // NODATACY\n        .first()\n        .invoke('text')\n        .then((batchId) => {\n        batchId = batchId.trim();\n        if (batchId) {\n            cy.log(`Captured Batch ID: ${batchId}`);\n            cy.writeFile('src/fixtures/batch-data.json', { batchId });\n        }\n        else {\n            cy.log('Error: Batch ID is empty!');\n        }\n    });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC005.cy.ts:31:55)",
                "diff": null
              },
              "uuid": "06042e3a-0003-4c54-aca1-9c9ef7c13506",
              "parentUUID": "5fc1029b-5c7f-4c88-91c2-d4788773e9b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "06042e3a-0003-4c54-aca1-9c9ef7c13506"
          ],
          "pending": [],
          "skipped": [],
          "duration": 94459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1d97a8e1-7c7f-429c-89d8-ca087bf03541",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC008.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC008.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff12d98c-d742-43c3-a962-b5592e8689eb",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC008.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC008.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC008",
              "fullTitle": "Residual TC008",
              "timedOut": null,
              "duration": 222490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Aiman (11/3/2025), Aiman (10/3/2025)\nHigh Level Test Steps:\n1. Products\n• Search for Customer: Skydance Media and Product Name : Reacher Reacher 2\n• Click on any Series ID\n• Click on Any Season Number\n• Select/Click on any Product ID  For Example: 12672-08-001\n• Click on \"\"CLONE\"\" button [Enter Episode Name, Episode Number, Principal Photog Date, WGA Contact Date and click on Update Product]\n• Click on “Update Product”\n• Go to \"\"Cast List\"\" tab and make sure that all are attached\n• Product Master Tab - Checked the checkbox for Sent to Client, Approved By client BOX and clicked the “Update Product” button.\n• Go to the \"\"Cast List” tab, scroll down all day to the \"\"SAG-AFTRA\"\" section.\n• Click on \"\"Calculate Prorata\"\"\n• Once it done calculating then click on VIEW then click on “Prorara Shares” tab and make sure that rates are available.\n• All the way on the top right click on \"\"Return to Cast List\"\"\n• Now go to the \"\"SAG-AFTRA\"\" Section and click on the LOCK option.\n• Now go to the \"\"Product Master\"\" tab and copy the PROD ID.\n• Assign a release date which is older than 90 days prior to sys date\nExpected: -\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\ncy.get('input[name=\"productName\"]').type('BORN AGAIN VIRGIN').blur(); //NODATACY\ncy.get('input[name=\"productID\"]').clear().type('17739-01-000101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\n//verify residual details\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('not.have.value', ''); //NODATACY\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone', { timeout: 10000 }).click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('not.have.value', ''); //NODATACY\n//update Product Details\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Type episode name\n    cy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n    cy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).type('Testing Adventure', { delay: 100 }); //NODATACY\n    //Type new episode number\n    cy.get('[data-cy=\"episode-number-input\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    //Type Season Number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900);\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    //Insert Principal Photo Date and WGA Contract Date\n    cy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }).clear().type('06032015', { delay: 100 }); //NODATACY\n    cy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }).clear().type('07302025', { delay: 100 }); //NODATACY\n    //Update Product Button\n    cy.get('[data-cy=\"update-product-btn\"]', { timeout: 10000 }).should('be.visible');\n    cy.get('[data-cy=\"update-product-btn\"]', { timeout: 10000 }).contains('Update Product').click();\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n    //verify Notification\n    cy.contains('Product updated', { timeout: 60000 }).should('be.visible');\n    cy.reload();\n    cy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\n    cy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\n});\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').click({ force: true }); //NODATACY\ncy.get('[class=\"section-header card-header\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Product Master').click(); //NODATACY\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\ncy.get('[name=\"productMaster.sentToClient\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.sentToClient\"]', { timeout: 30000 }).check(); //NODATACY\ncy.get('[name=\"productMaster.approvedByClient\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.approvedByClient\"]', { timeout: 30000 }).check(); //NODATACY\n//Update Product Button\ncy.get('[data-cy=\"update-product-btn\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[data-cy=\"update-product-btn\"]', { timeout: 30000 }).contains('Update Product').click(); //NODATACY\n//verify Notification\ncy.contains('Product updated', { timeout: 60000 }).should('be.visible');\ncy.reload();\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').click({ force: true }); //NODATACY\ncy.contains('SAG-AFTRA', { timeout: 60000 }).parent().find('button').contains('Calculate Prorata').should('be.visible').click();\ncy.contains('Prorata shares calculated successfully.', { timeout: 60000 }).should('be.visible');\ncy.contains('SAG-AFTRA')\n    .parent()\n    .within(() => {\n    cy.get('table.k-grid-table').within(() => {\n        cy.get('tr.k-master-row')\n            .first()\n            .within(() => {\n            cy.get('td').last().find('i').contains('View').should('be.visible').click({ force: true });\n        });\n    });\n});\ncy.contains('RESIDUAL TALENT DETAILS', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"talent-name\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Prorata Shares').click({ force: true }); //NODATACY\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 30000 }).should('be.visible');\n// Click the \"Return to Cast List\" link\ncy.contains('Return to Cast List', { timeout: 30000 }).should('be.visible');\ncy.contains('Return to Cast List', { timeout: 30000 }).click();\ncy.contains('Residual Details', { timeout: 30000 }).should('be.visible');\ncy.contains('SAG-AFTRA').parent().find('button').contains('Lock').should('be.visible').click();\ncy.contains('SAG-AFTRA').parent().find('button').contains('Unlock', { timeout: 30000 }).should('be.visible');\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Product Master').click(); //NODATACY\n// Select Reuse Market\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').should('be.visible'); //NODATACY\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').click(); //NODATACY\ncy.get('.k-list-item').contains('Basic').click(); //NODATACY\n// Calculate the date 90 days before today\nconst pastDate = new Date();\npastDate.setDate(pastDate.getDate() - 90);\nconst formattedDate = `${(pastDate.getMonth() + 1).toString().padStart(2, '0')}/` +\n    `${pastDate.getDate().toString().padStart(2, '0')}/` +\n    `${pastDate.getFullYear()}`;\n// Enter the Release Date\ncy.get('input[role=\"combobox\"]').eq(4).should('be.visible'); //NODATACY\ncy.get('input[role=\"combobox\"]').eq(4).type(formattedDate).blur(); //NODATACY\n// Click \"Add Release Date\" button AFTER selecting the Reuse Market and entering the date\ncy.contains('Add Release Date').should('be.visible');\ncy.contains('Add Release Date').click();\ncy.get('input[name=\"productMaster.productID\"]') //NODATACY\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n    // Read the existing CSV file and update only the Product ID\n    cy.readFile('src/fixtures/ITDRevenueTemplate.csv', { timeout: 5000 }).then((existingData) => {\n        // Split the CSV content by lines\n        let csvLines = existingData.split('\\n');\n        // If the file is empty or missing headers, define them\n        if (csvLines.length < 2) {\n            csvLines = [\n                'Customer ID,Product ID,Reuse Market,Gross ITD,EST Units,Period End Date',\n                `160910,${productId},Basic,50000,40000,03/31/2025`\n            ];\n        }\n        else {\n            // Update the second row with the new Product ID while keeping other values unchanged\n            csvLines[1] = `160910,${productId},Basic,50000,40000,03/31/2025`;\n        }\n        // Write the updated content back to the CSV file\n        cy.writeFile('src/fixtures/ITDRevenueTemplate.csv', csvLines.join('\\n'));\n    });\n});\ncy.visit('resid/financial-data/revenue');\ncy.contains('Revenue and Usage Log', { timeout: 30000 }).should('be.visible');\ncy.contains('Upload Financial Data', { timeout: 30000 }).should('be.visible');\ncy.contains('Upload Financial Data', { timeout: 30000 }).click();\ncy.contains('div', 'ITD Revenue', { timeout: 30000 }).should('be.visible');\ncy.contains('div', 'ITD Revenue', { timeout: 30000 }).find('input[type=\"radio\"]').check({ force: true });\ncy.contains('Select file...', { timeout: 30000 }).should('be.visible');\ncy.contains('Select file...', { timeout: 30000 }).click({ force: true });\ncy.fixture('product-data.json').then((productData) => {\n    cy.fixture('ITDRevenueTemplate.csv', 'utf8').then((csvData) => {\n        // Split CSV into rows\n        let rows = csvData.split('\\n');\n        // Extract header row and data rows\n        let headers = rows[0].split(',');\n        let dataRows = rows.slice(1);\n        // Find the index of the \"Product ID\" column\n        let productIdIndex = headers.findIndex((header) => header.trim() === 'Product ID');\n        if (productIdIndex === -1) {\n            throw new Error('Product ID column not found in CSV.');\n        }\n        // Process each row and replace Product ID values\n        let updatedDataRows = dataRows.map((row) => {\n            let columns = row.split(',');\n            // Ensure row is not empty before processing\n            if (columns.length > 1 && columns.some((value) => value.trim() !== '')) {\n                console.log(`Replacing ${columns[productIdIndex]} with ${productData.productId}`);\n                columns[productIdIndex] = productData.productId; // Update Product ID\n            }\n            return columns.join(','); // Reconstruct the row\n        });\n        // Combine headers and updated rows\n        let updatedCsv = [headers.join(','), ...updatedDataRows].join('\\n');\n        // Write the modified CSV back to a file\n        cy.writeFile('src/fixtures/UpdatedITDRevenueTemplate.csv', updatedCsv);\n    });\n});\ncy.fixture('UpdatedITDRevenueTemplate.csv', 'base64').then((fileContent) => {\n    cy.get('input[type=\"file\"]').attachFile({\n        //NODATACY\n        fileContent,\n        fileName: 'UpdatedITDRevenueTemplate.csv',\n        mimeType: 'text/csv',\n        encoding: 'base64'\n    });\n});\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Upload').should('be.visible'); //NODATACY\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Upload').click({ force: true }); //NODATACY\ncy.get('[class=\"k-grid-content k-virtual-content\"]', { timeout: 30000 }).should('exist').should('be.visible'); //NODATACY\ncy.get('[class=\"k-checkbox k-checkbox-md k-rounded-md\"]', { timeout: 10000 }).should('exist').should('be.visible'); //NODATACY\ncy.get('[class=\"k-checkbox k-checkbox-md k-rounded-md\"]', { timeout: 10000 }).check(); //NODATACY\ncy.get('[class=\"btn btn-primary ng-star-inserted\"]', { timeout: 30000 }).contains('Approve').should('be.visible'); //NODATACY\ncy.get('[class=\"btn btn-primary ng-star-inserted\"]', { timeout: 30000 }).contains('Approve').click({ force: true }); //NODATACY\ncy.get('button[aria-label=\"Close\"]').should('be.visible'); //NODATACY\ncy.get('button[aria-label=\"Close\"]').click(); //NODATACY\ncy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'Product updated' but never did.",
                "estack": "AssertionError: Timed out retrying after 60000ms: Expected to find content: 'Product updated' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC008.cy.ts:101:61)",
                "diff": null
              },
              "uuid": "21951c7c-9f4c-4652-9e99-9828a8a20197",
              "parentUUID": "ff12d98c-d742-43c3-a962-b5592e8689eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "21951c7c-9f4c-4652-9e99-9828a8a20197"
          ],
          "pending": [],
          "skipped": [],
          "duration": 222490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25b82725-d2d4-42e6-b388-75c256a2f803",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC009.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC009.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f49b28a3-93b0-4a49-8f26-e872ed6b4635",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC009.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC009.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC009",
              "fullTitle": "Residual TC009",
              "timedOut": null,
              "duration": 66029,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Trigger\nLast Updated : Aiman (10/3/2025)\nHigh Level Test Steps:\n2.Triggers\n•Enter Product ID that you have created\n•Click on Search\n•Triggers are created for the Product ID\n•Approve the triggers\nExpected: -\n*/\ncy.visit('resid/trigger-search/revenuetriggers');\ncy.contains('Revenue Trigger Search', { timeout: 30000 }).should('be.visible');\ncy.fixture('product-data.json').then((data) => {\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).type(data.productId).blur();\n});\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).click();\ncy.get('tbody[kendogridtablebody] tr.k-master-row', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('tbody[kendogridtablebody] tr.k-master-row', { timeout: 30000 }).should('have.length.greaterThan', 0); //NODATACY\ncy.get('input.k-checkbox', { timeout: 30000 }).eq(1).check({ force: true }).should('be.checked');\ncy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).click({ force: true });\ncy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"9\"] button[name=\"status\"]', { timeout: 30000 }).eq(0).should('have.text', 'Approved'); //NODATACY",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr.k-master-row`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr.k-master-row`, but never found it.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC009.cy.ts:49:78)",
                "diff": null
              },
              "uuid": "ceb49449-dded-4f46-a9aa-d4a851b8ec44",
              "parentUUID": "f49b28a3-93b0-4a49-8f26-e872ed6b4635",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ceb49449-dded-4f46-a9aa-d4a851b8ec44"
          ],
          "pending": [],
          "skipped": [],
          "duration": 66029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bdb1f5ba-4b11-47a8-812f-b7a54920c73f",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC010.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC010.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f12981df-873c-4fa4-a78a-110fdee59790",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC010.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC010.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC010",
              "fullTitle": "Residual TC010",
              "timedOut": null,
              "duration": 93875,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Obligations\nLast Updated : Aiman (10/3/2025)\nHigh Level Test Steps:\n3.Obligations\n•Enter Product ID that you have created\n•Click on Search\n•You will be able to see obligations for SAG-AFTRA\n•Select all lines and click on the “Approve” button.\nNote: Make sure the obligation calculation is accurate and as per the formula\n*/\ncy.visit('resid/guild-obligations/financeobligations');\ncy.fixture('product-data.json').then((data) => {\n    cy.get('input[name=\"productID\"]').type(data.productId).blur(); //NODATACY\n});\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible').click();\ncy.get('tbody[kendogridtablebody] tr[kendogridlogicalrow]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('#mastercheck', { timeout: 30000 }).check().should('be.checked'); //NODATACY\ncy.contains('Approve', { timeout: 30000 }).should('be.visible').click();\ncy.contains('Record(s) Updated', { timeout: 90000 }).should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr[kendogridlogicalrow]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr[kendogridlogicalrow]`, but never found it.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC010.cy.ts:50:86)",
                "diff": null
              },
              "uuid": "2692ab65-ac44-4e9e-bb4d-888c5479d35e",
              "parentUUID": "f12981df-873c-4fa4-a78a-110fdee59790",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2692ab65-ac44-4e9e-bb4d-888c5479d35e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 93875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6e397213-83ff-4eaf-967a-4632dacb83ff",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC011.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC011.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a6cf79c7-5f56-4f60-a841-c0078029bea1",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC011.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC011.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC011",
              "fullTitle": "Residual TC011",
              "timedOut": null,
              "duration": 64849,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Payments\nLast Updated : Aiman (10/3/2025)\nHigh Level Test Steps:\n4. Payments\n•Enter Product ID that you have created\n•Click on Search\n•Select one line and double click on “Voucher ID”. Make sure that Pension amount has been calculated.\n•Now select all the lines and click on the “Invoice” button.\n*/\ncy.visit('resid/residuals-payment');\ncy.contains('Residual Payment', { timeout: 30000 }).should('be.visible');\ncy.fixture('product-data.json').then((data) => {\n    cy.get('input[name=\"productID\"]').type(data.productId).blur(); //NODATACY\n});\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).click();\ncy.get('tbody[kendogridtablebody] tr[kendogridlogicalrow]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input.k-checkbox', { timeout: 30000 }).eq(1).should('be.visible'); //NODATACY\ncy.get('input.k-checkbox', { timeout: 30000 }).eq(1).check({ force: true }); //NODATACY\ncy.get('td[data-kendo-grid-column-index=\"6\"] span.btn.btn-xs.btn-link').eq(0).should('be.visible'); //NODATACY\ncy.get('td[data-kendo-grid-column-index=\"6\"] span.btn.btn-xs.btn-link').eq(0).click(); //NODATACY\ncy.get('div[role=\"dialog\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\n// Verify the table exists\ncy.get('table.table.table-striped.table-bordered').should('be.visible'); //NODATACY\n// Verify the \"Total Pension Amount\" column exists\ncy.contains('Total Pension Amount', { timeout: 30000 }).should('be.visible');\ncy.get('tbody tr td:nth-child(10)').should(($td) => {\n    expect($td.text().trim()).to.match(/\\d+(\\.\\d{1,2})?/);\n});\n// Click the close button inside the dialog\ncy.get('button[title=\"Close\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('button[title=\"Close\"]', { timeout: 30000 }).click(); //NODATACY\ncy.get('#mastercheck').should('be.visible').check({ force: true }); //NODATACY\ncy.get('#mastercheck').check({ force: true }); //NODATACY\ncy.get('[data-cy=\"invoice-btn\"]').should('be.visible');\ncy.get('[data-cy=\"invoice-btn\"]').click({ force: true });\ncy.contains('Vouchers are in the process of being Invoiced', { timeout: 60000 }).should('be.visible');\ncy.contains('Batch created successfully', { timeout: 60000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"18\"] a', { timeout: 60000 }) //NODATACY\n    .eq(0)\n    .should('be.visible')\n    .invoke('text')\n    .then((batchId) => {\n    cy.writeFile('src/fixtures/batch-data.json', { batchId: batchId.trim() });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr[kendogridlogicalrow]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find element: `tbody[kendogridtablebody] tr[kendogridlogicalrow]`, but never found it.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC011.cy.ts:68:86)",
                "diff": null
              },
              "uuid": "06c4f39b-c78d-4fd6-b8dd-d295ae19521b",
              "parentUUID": "a6cf79c7-5f56-4f60-a841-c0078029bea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "06c4f39b-c78d-4fd6-b8dd-d295ae19521b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 64849,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "44d26615-f61e-497f-aa79-c2d446d7eeb3",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC014.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC014.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c62203b4-3d79-46e8-b378-58feb2b6198a",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC014.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC014.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC014",
              "fullTitle": "Residual TC014",
              "timedOut": null,
              "duration": 58872,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n1. Product Creation:\n•Search for Customer: Skydance Media and Product Name: The Love Boat Test\n•Click on any Series ID\n•Click on Any Season Number\n•Select/Click on any Product ID  For Example: 12837-024-001\n•Click on \"CLONE\" button [Enter Episode Name, Episode Number, Principal Photog Date, WGA Contact Date and click on Update Product]\n•Click on “Update Product”\n•Go to \"Cast List\" tab and make sure that all are attached\n•Product Master Tab - Checked the checkbox for Sent to Client, Approved By client BOX and clicked the “Update Product” button.\n•Go to the \"Cast List” tab, scroll down all day to the \"SAG-AFTRA\" section.\n•Click on \"Calculate Prorata\"\n•Once it done calculating then click on VIEW then click on “Prorata Shares” tab and make sure that rates are available.\n•All the way on the top right click on \"Return to Cast List\"\n•Now go to the \"SAG-AFTRA\" Section and click on the LOCK option.\n•Now go to the \"Product Master\" tab and copy the PROD ID.\nExpected: -\n*/\n//Navigate to residual product\ncy.visit('resid/residuals-search');\n// Verify product master grid is visible before interacting\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\n// Enter product ID in input field\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').clear();\ncy.get('[data-cy=\"product-id-input\"]').type('17739-01-000101', { delay: 200 });\n// Click on Search button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible').contains('Search').click({ force: true });\n// Verify the product ID exists in the search results and click on it\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"0\"] a') // NODATACY\n    .should('exist')\n    .and('contain', '17739-01-000101')\n    .invoke('removeAttr', 'target')\n    .click({ force: true });\n// Verify that the Episode Name field is populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Click on the Clone button\ncy.contains('Clone', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .click({ force: true });\n// Read episode data from a fixture file\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Clear and enter new episode name\n    cy.get('input[name=\"EpisodeName\"]', { timeout: 90000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').click({ force: true }); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').type('Testing Adventure', { delay: 300 }); // NODATACY\n    // Generate and enter a random season number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900); // Generates a random 3-digit number (100-999)\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    // Clear and enter new episode number\n    cy.get('input[name=\"EpisodeNumber\"]', { timeout: 50000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeNumber\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    cy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\n    //Choose from dropdown\n    cy.get('[name=\"productMaster.subMarket\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HBSVOD').click(); // NODATACY\n    //Choose service name\n    cy.get('[name=\"serviceName\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HULU').click(); // NODATACY\n    // Enter Principal Photo Date\n    cy.get('[data-cy=\"principal-photo-date\"]', { timeout: 50000 }).should('be.visible');\n    cy.get('input#datepicker-1').clear(); // NODATACY\n    cy.get('input#datepicker-1').type('02/18/2018');\n    cy.get('input#datepicker-1').blur();\n    //Enter WGA Contact Date\n    cy.get('input#datepicker-3').clear(); // NODATACY\n    cy.get('input#datepicker-3').type('02/18/2018');\n    cy.get('input#datepicker-3').blur();\n    // Click on Update Product button\n    cy.contains('Update Product', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n});\n// Verify that product was updated successfully\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.reload();\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Navigate to Cast List tab\ncy.get('[class=\"nav-link\"]', { timeout: 80000 }) // NODATACY\n    .contains('Cast List', { timeout: 80000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is present in Cast List\ncy.get('[role=\"columnheader\"]', { timeout: 50000 }).contains('Employee Id', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to Product Master tab\ncy.get('[class=\"nav-link\"]', { timeout: 50000 }) // NODATACY\n    .contains('Product Master', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Episode Name field is still populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Check checkboxes for \"Sent to Client\" and \"Approved by Client\"\ncy.get('input[name=\"productMaster.sentToClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\ncy.get('input[name=\"productMaster.approvedByClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\n// Click on Update Product button again\ncy.contains('Update Product', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify product update confirmation\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.reload();\n// Navigate back to Cast List\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Cast List', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Locate SAG-AFTRA section and click on Calculate Prorata\ncy.contains('SAG-AFTRA', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify prorata shares were calculated successfully\ncy.contains('Prorata shares calculated successfully.', { timeout: 90000 }).should('be.visible'); // NODATACY\n//choose one of the cast\ncy.get('[class=\"fa fa-edit\"]:first', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Birth Date and Name fields are visible\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Birth Date', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Name', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Navigate to Prorata Shares tab\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Prorata Shares', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Prorata Shares section is visible\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 90000 }).should('be.visible');\n// Click Update, Guild, and Return to Cast List\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Update', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains(' Return to Cast List ', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Employee ID column and Calculate Prorata  is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Ensure the 'Lock' button for 'SAG-AFTRA' is visible and click\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock', { timeout: 50000 }).should('be.visible'); // NODATACY\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock').click({ force: true }); // NODATACY\n// Ensure the 'Unlock' button appears after locking, confirming the lock action\ncy.contains('Unlock', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to the 'Product Master'\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }) // NODATACY\n    .contains('Product Master', { timeout: 30000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify the 'EpisodeName' input field is visible and not empty\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Retrieve the 'productID' from the input field and save it to a JSON file\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n});\n//Choose reuse market\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').click(); // NODATACY\ncy.get('.k-list-item').contains('SVOD').click(); // NODATACY\n//set release date\ncy.get('#datepicker-4').clear(); // NODATACY\ncy.get('#datepicker-4').type('03/12/2024');\ncy.get('#datepicker-4').blur();\n//Click button 'Add Release Date'\ncy.get('[class=\"btn btn-primary\"]').contains('Add Release Date').should('be.visible').click(); // NODATACY\ncy.contains('button', \"Yes, I'm sure\", { timeout: 10000 }).should('be.visible').click(); // NODATACY",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '' not to be empty",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '' not to be empty\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC014.cy.ts:51:62)",
                "diff": null
              },
              "uuid": "4b7aa1f7-157c-4127-b66a-06947a5cd8cd",
              "parentUUID": "c62203b4-3d79-46e8-b378-58feb2b6198a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4b7aa1f7-157c-4127-b66a-06947a5cd8cd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 58872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7295cb65-3d42-48c7-93d1-97c9b9bde2b4",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC016.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC016.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "856142f7-bb17-4bb4-8be0-bf8b5ce90830",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC016.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC016.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC016",
              "fullTitle": "Residual TC016",
              "timedOut": null,
              "duration": 28665,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Triggers\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n3. Triggers\n• Enter Project ID that you have created\n• Click on Search\n• You will be able to see the file you have uploaded.\n• If the ITD amounts are correct then click on the “Approve” button.\nExpected: -\n*/\n// Retrieve Product ID from fixture file\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId;\n    //  navigateToTrigger();\n    cy.visit('resid/trigger-search/revenuetriggers');\n    //Go to Usage Triggers tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Triggers', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Triggers').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    cy.get('kendo-grid').should('exist');\n    cy.get('table') // NODATACY\n        .find('td') // Find all table cells\n        .filter(':contains(\"SB\")') // Filter cells that contain \"SB\"\n        .each(($el) => {\n        cy.wrap($el).click(); // Click on the cell containing \"SB\"\n        // Ensure the popup appears and click \"No\"\n        cy.get('kendo-dialog-actions button', { timeout: 30000 })\n            .contains('No', { timeout: 30000 })\n            .should('be.visible')\n            .click({ force: true });\n    });\n    //check the checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Click the \"Approve\" button\n    cy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"approve-btn\"]').click({ force: true });\n    // Verify feedback notification appears\n    cy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible'); // NODATACY\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `:contains(\"SB\")`, but never found it. Queried from:\n\n              > cy.get(table).find(td)",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `:contains(\"SB\")`, but never found it. Queried from:\n\n              > cy.get(table).find(td)\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC016.cy.ts:40:0)",
                "diff": null
              },
              "uuid": "9356b150-bb8d-4490-ac1a-5f1137ba807a",
              "parentUUID": "856142f7-bb17-4bb4-8be0-bf8b5ce90830",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9356b150-bb8d-4490-ac1a-5f1137ba807a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28665,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "289ec2bb-95ba-494c-91fb-b3dc7bc0bebc",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC017.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC017.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83c71b4f-e53e-4060-8bea-37db9f441fe9",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC017.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC017.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC017",
              "fullTitle": "Residual TC017",
              "timedOut": null,
              "duration": 83404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/* Module:\n   Last Updated: Syed (24/02/2025)\n   High Level Step:\n   4. Obligations\n    •Enter Project ID that you have created\n    •Click on Search\n    •You will be able to see obligations for SAG-AFTRA\n    •Select all lines and click on the “Approve” button.\n \n   Expected: */\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //  navigateToObligations();\n    cy.visit('resid/guild-obligations/financeobligations');\n    // Go to Usage Obligations tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Obligations', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Obligations').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, then click\n    cy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-button\"]').click();\n    // Ensure that the expected obligation record appears\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Select all records in the grid by checking the master checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Verify that the \"Approve\" button is visible, then clcik\n    cy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"btn btn-primary\"]').contains('Approve').click({ force: true });\n    // Verify that the success message confirming the update is displayed\n    cy.contains('Record(s) Updated', { timeout: 30000 }).should('be.visible'); // NODATACY\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC017.cy.ts:35:55)",
                "diff": null
              },
              "uuid": "d7093c4e-98fa-4970-95c6-cb84cdc6a5bc",
              "parentUUID": "83c71b4f-e53e-4060-8bea-37db9f441fe9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d7093c4e-98fa-4970-95c6-cb84cdc6a5bc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 83404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fdb90d19-133b-4379-a33e-1c59e56f0721",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-TC018.cy.ts",
      "file": "src\\e2e\\kl\\residuals-TC018.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d7f896e-d13f-4405-9c58-a21f9f8e10ba",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-TC018.cy.ts",
          "file": "src\\e2e\\kl\\residuals-TC018.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC018",
              "fullTitle": "Residual TC018",
              "timedOut": null,
              "duration": 47309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/* Module: Residual - Payments\n   Last Updated: Syed (24/02/2025)\n   High Level Step:\n   5. Payments\n    •Enter Project ID that you have created\n    •Click on Search\n    •Select one line and double click on “Voucher ID”. Make sure that Pension amount has been calculated.\n    •Now select all the lines and click on the “Invoice” button.\n    Note: You will see the Batch ID has been created immediately but there is a job that runs every 15 mins to create a Batch.  This allows residuals to Invoice 100 at a time without bugging the system.\n   Expected: */\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //navigate To Payments\n    cy.visit('resid/residuals-payment');\n    // Verify the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    // Verify the expected record appears in the results\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); //NODATACY\n    // Select the first checkbox in the grid\n    cy.get('#k-grid0-checkbox0').check({ force: true }); //NODATACY\n    // Double-click the first Voucher ID cell to open the details popup\n    cy.get('td[data-kendo-grid-column-index=\"6\"]') // Selects the cell containing the Voucher ID\n        .first() // Ensures Cypress interacts only with the first row\n        .dblclick();\n    // Verify the voucher details table is visible\n    cy.get('[class=\"thead-default thead-sm\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\n    // Ensure the voucher details table contains valid data\n    cy.get('div.k-window-content table tbody tr')\n        .should('be.visible')\n        .first()\n        .find('td')\n        .eq(9)\n        .should('exist')\n        .invoke('text')\n        .then((text) => {\n        expect(text.trim()).not.to.be.empty;\n    });\n    // Close the voucher details popup\n    cy.get('button[title=\"Close\"]').click({ force: true }); //NODATACY\n    cy.get('.k-window.k-dialog').invoke('remove');\n    cy.get('.k-overlay').invoke('attr', 'style', 'display: none;');\n    // Select all records using the master checkbox\n    cy.get('#mastercheck').check({ force: true }); //NODATACY\n    // Verify the \"Invoice\" button is visible, click\n    cy.get('[data-cy=\"invoice-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"invoice-btn\"]').click({ force: true });\n    // Confirm the success message for batch creation\n    cy.contains(' Vouchers are in the process of being Invoiced. Batch created successfully. Please check the Batch after some time once processing is complete. ', { timeout: 30000 }).should('be.visible'); //NODATACY\n    // Verify the batch ID column is visible\n    cy.get('td[data-kendo-grid-column-index=\"18\"]', { timeout: 30000 }).first().should('be.visible'); //NODATACY\n    // Extract and validate the Batch ID\n    cy.get('td[data-kendo-grid-column-index=\"18\"]', { timeout: 30000 }) //NODATACY\n        .first()\n        .invoke('text')\n        .should('not.be.empty', { timeout: 30000 });\n    // Store the Batch ID in a fixture file for future use\n    cy.get('td[data-kendo-grid-column-index=\"18\"]') //NODATACY\n        .first()\n        .invoke('text')\n        .then((batchId) => {\n        batchId = batchId.trim();\n        if (batchId) {\n            cy.log(`Captured Batch ID: ${batchId}`);\n            cy.writeFile('src/fixtures/batch-data.json', { batchId });\n        }\n        else {\n            cy.log('Error: Batch ID is empty!');\n        }\n    });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.",
                "estack": "AssertionError: Timed out retrying after 30000ms: Expected to find content: 'SAG-AFTRA' but never did.\n    at Context.eval (webpack:///./src/e2e/kl/residuals-TC018.cy.ts:33:55)",
                "diff": null
              },
              "uuid": "c9808bdf-1a88-4242-8ada-fc74c7bd28bf",
              "parentUUID": "7d7f896e-d13f-4405-9c58-a21f9f8e10ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c9808bdf-1a88-4242-8ada-fc74c7bd28bf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 47309,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e37cc42d-b388-46a7-aa1c-ef215e029b69",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "114d871f-a19c-4dae-9519-2112920cbf39",
          "title": "Residual - Estimates",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC029",
              "fullTitle": "Residual - Estimates TC029",
              "timedOut": null,
              "duration": 33370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: (26/3/2025), Aiman (17/3/2025)\nHigh-Level Test Steps:\n1.\nExpected\n*/\ncy.visit('resid/estimation-search/0');\n//Click New Estimation Button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n//Verify Estimate For's Dialog is visible\ncy.contains('Estimate For', { timeout: 30000 }).should('be.visible');\n//New Product and Exciting Product radio button\ncy.get('[data-cy=\"existing-product-estimation\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]', { timeout: 30000 }).should('be.visible');\n// Select Existing Product\ncy.get('[data-cy=\"existing-product-estimation\"]').click();\ncy.selectKendoDropdownListItem('existing-product-estimation-customer', 'HEAR NO EVIL LLC');\ncy.selectKendoDropdownListItem('existing-product-estimation-madeForMarket', 'New Media');\ncy.selectKendoDropdownListItem('existing-product-estimation-product', 'HEAR NO EVIL');\ncy.selectKendoDropdownListItem('existing-product-estimation-paymentType', 'Run');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'SAG');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-reuseMarkets', 'DTR');\n//click next button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n//Navigate through the form\nconst formSelector = 'form[name=\"estimateForm\"]';\n//cy.get(`${formSelector} [data-cy=\"epe-previously-paid-year\"]`).click();\ncy.get(`${formSelector} [data-cy=\"epe-guilds-data\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get(`${formSelector} [data-cy=\"epe-trigger-run-info\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get('table.table.table-bordered thead', { timeout: 30000 }).should('contain', 'Reuse Market').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead', { timeout: 30000 }).should('contain', 'Run Number').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead', { timeout: 30000 }).should('contain', 'Last Year Paid').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead', { timeout: 30000 }).should('contain', 'Percentage').eq(1).scrollIntoView(); //NODATACY\ncy.get(`${formSelector} [data-cy=\"epe-paid-history\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get('table.table-bordered thead', { timeout: 30000 }).should('contain', 'Reuse Market').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table-bordered thead', { timeout: 30000 }).should('contain', 'ITD'); //NODATACY\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n// New Runs\ncy.get(`${formSelector} [data-cy=\"epe-new-runs\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get(`${formSelector} [data-cy=\"epe-new-runs-input\"]`, { timeout: 30000 }).scrollIntoView().type('2');\n//click Generate Estimate\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n// Verify Estimate Section\ncy.contains('Estimate:', { timeout: 30000 }).scrollIntoView().should('be.visible');\n// Expand Estimation Summary Sections\ncy.get(`${formSelector} [class=\"k-expander-header\"]`, { timeout: 30000 }).eq(4).scrollIntoView().click(); //NODATACY\n// Expand Next Summary Section\ncy.get(`${formSelector} [class=\"k-expander-header\"]`, { timeout: 30000 }).eq(5).scrollIntoView().click(); //NODATACY\ncy.get(`${formSelector} [class=\"k-expander-content\"]`, { timeout: 30000 }).eq(5).scrollIntoView().click(); //NODATACY\ncy.contains('Grand Total', { timeout: 30000 }).scrollIntoView().should('be.visible');\n// Verify Summary Table Exists\ncy.get('table.table-bordered', { timeout: 30000 }).eq(3).scrollIntoView().should('be.visible'); //NODATACY",
              "err": {},
              "uuid": "0c724773-332f-489d-8b23-160410b2d44f",
              "parentUUID": "114d871f-a19c-4dae-9519-2112920cbf39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c724773-332f-489d-8b23-160410b2d44f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33370,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f4a6e61c-2ac4-4e0c-a5da-317914f45e87",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC002.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC002.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b06f20d5-37f0-4ded-bece-539a49f644a5",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC002.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC002.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC002",
              "fullTitle": "Residual TC002",
              "timedOut": null,
              "duration": 111915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (27/2/2025)\nHigh-Level Test Steps:\n1. Verify that user is able to generate New Product estimate as a PDF estimate report\nExpected\n*/\n// Navigate to the Estimates page\ncy.visit('resid/estimation-search/0');\n// Ensure the \"New Estimation\" button is visible before clicking\ncy.get('[data-cy=\"new-estimation\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"new-estimation\"]').click();\n// Verify that the \"New Estimation\" dialog appears\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 30000 }).contains('New Estimation').should('be.visible'); //NODATACY\n// Fill in estimation details\ncy.get('input[name=\"EstimateName\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"EstimateName\"]').type('Test Estimates'); //NODATACY\ncy.selectKendoDropdownListItemCustomChild('[name=\"madeForMarket\"]', 'Theatrical', 1); //NODATACY\ncy.selectKendoDropdownListItemCustomChild('[name=\"subMarket\"]', '--N/A-', 0); //NODATACY\n// Enter runtime value\ncy.get('input[name=\"Runtime\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"Runtime\"]').type('120'); //NODATACY\n// Select guilds and reuse market list\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"masterGuilds\"]', ['SAG-AFTRA', 'DGA'], 0); //NODATACY\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"reuseMarketList\"]', ['SVOD'], 0); //NODATACY\n// Select principal photo date\ncy.selectKendoDatePickerFieldCustomChild('[name=\"principalPhotoDate\"]', '1/1/2021', 0); //NODATACY\n// Stub window.open to remain in the same page\ncy.window().then((win) => {\n    cy.stub(win, 'open').callsFake((url) => {\n        win.location.href = url;\n    });\n});\n// Click \"Next\" button to proceed\ncy.get('[class=\"btn btn-primary\"]', { timeout: 3000 }).contains('Next').should('be.visible'); //NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Next').click(); //NODATACY\n// Clear and enter new value in input field\ncy.get('[style=\"display: inline-block;\"] > .k-input > .k-input-inner', { timeout: 3000 }).should('be.visible'); //NODATACY\ncy.get('[style=\"display: inline-block;\"] > .k-input > .k-input-inner').clear(); //NODATACY\ncy.get('[style=\"display: inline-block;\"] > .k-input > .k-input-inner').type('20000'); //NODATACY\n// Click \"Next\" button again\ncy.get('[data-cy=\"generate-gross-receipts-btn\"]', { timeout: 3000 }).should('be.visible');\ncy.get('[data-cy=\"generate-gross-receipts-btn\"]').click();\n// Verify the gross receipts message appears\ncy.contains('Gross Receipts are generated for all guilds.', { timeout: 3000 }).should('be.visible'); //NODATACY\n// Click \"Generate Report\" button\ncy.get('[data-cy=\"generate-report-dropdown\"]', { timeout: 3000 }).should('be.visible');\ncy.get('[ data-cy=\"generate-report-dropdown\"]').click();\n// Verify PDF and Excel options are available\ncy.contains('.k-menu-link-text', 'PDF').should('be.visible'); //NODATACY\ncy.contains('.k-menu-link-text', 'Excel').should('be.visible'); //NODATACY\n// Stub window.open again to stay on the same page for downloading the report\ncy.window().then((win) => {\n    cy.stub(win, 'open').callsFake((url) => {\n        win.location.href = url;\n    });\n});\n// Click the PDF download button\ncy.contains('.k-menu-link-text', 'PDF').click(); //NODATACY\ncy.exec('powershell -Command \"Get-ChildItem cypress/downloads/*.pdf | Sort-Object LastWriteTime -Descending | Select-Object -First 1 | ForEach-Object { $_.FullName }\"', { timeout: 80000 }).then((result) => {\n    const downloadedFilePath = result.stdout.trim();\n    if (downloadedFilePath) {\n        cy.log(`Downloaded file: ${downloadedFilePath}`);\n        cy.readFile(downloadedFilePath, { timeout: 80000 }).should('exist');\n    }\n    else {\n        throw new Error('No downloaded file found');\n    }\n});\n/*  // Define the expected download path and verify the file exists\nconst downloadedFilePath = 'cypress/downloads/Test Estimates_Estimate.PDF';\ncy.readFile(downloadedFilePath, { timeout: 10000 }).should('exist'); */",
              "err": {},
              "uuid": "1e23188a-307c-4d40-808c-527985103956",
              "parentUUID": "b06f20d5-37f0-4ded-bece-539a49f644a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e23188a-307c-4d40-808c-527985103956"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 111915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4c6f2b9e-945a-4b56-afd6-2c1bd5aa3e8d",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC005.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC005.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "972c4f7d-561f-4bb9-9f1c-8dc237713ce7",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC005.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC005.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC005",
              "fullTitle": "Residual TC005",
              "timedOut": null,
              "duration": 60536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (27/2/2025)\nHigh-Level Test Steps:\n1. Verify that existing estimate screen has the new \"Back\" button to navigate to previous screen without user needing to click on the top headers\nExpected\n*/\n// Navigate to the estimation search page\ncy.visit('resid/estimation-search/0');\n//Click New Estimation Button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify that the estimation type options are visible\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select \"Existing Product Estimation\" option\ncy.get('[data-cy=\"existing-product-estimation\"]').check();\n// Verify that the \"New Estimation\" dialog appears\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 30000 }).contains('New Estimation').should('be.visible'); // NODATACY\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('existing-product-estimation-customer', 'PURE FLIX ENTERTAINMENT LLC');\n// Select market type from dropdown\ncy.selectKendoDropdownListItem('existing-product-estimation-madeForMarket', 'New Media');\n// Select product from dropdown\ncy.selectKendoDropdownListItem('existing-product-estimation-product', 'CHRISTMAS MANGER');\n// Select payment type from dropdown\ncy.selectKendoDropdownListItem('existing-product-estimation-paymentType', 'Revenue');\n// Select guilds from multi-select dropdown\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'SAG-AFTRA');\ncy.get('[class=\"k-window-title k-dialog-title\"]').contains('New Estimation').click(); // NODATACY\n// Select reuse market from multi-select dropdown\ncy.selectKendoMultiSelectListItem('existing-product-estimation-reuseMarkets', 'Basic');\n// Verify that the next button is visible\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 30000 }).should('be.visible');\n// Click next to proceed\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n// Verify that the \"Back\" button is visible on the next screen\ncy.contains('Back', { timeout: 30000 }).should('be.visible'); // NODATACY",
              "err": {},
              "uuid": "a2b554bc-e7e3-43be-a3d6-f2e31349759f",
              "parentUUID": "972c4f7d-561f-4bb9-9f1c-8dc237713ce7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2b554bc-e7e3-43be-a3d6-f2e31349759f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b1dd49f4-5343-4c28-ac71-27afd8df1a9b",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC006.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC006.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eeb1efc8-32c2-464c-b34e-88dd73df550a",
          "title": "Residual - Estimates",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC006.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC006.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC034",
              "fullTitle": "Residual - Estimates TC034",
              "timedOut": null,
              "duration": 29554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Aiman (26/3/2025), Aiman (17/3/2025)\nHigh-Level Test Steps:\n1.\nExpected\n*/\ncy.visit('resid/estimation-search/0');\n//Click New Estimation Button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up choose new product's radio button\n    .click();\n//Verify Estimate For's Dialog is visible\ncy.contains('Estimate For', { timeout: 30000 }).should('be.visible');\n//New Product and Exciting Product radio button\ncy.get('[data-cy=\"existing-product-estimation\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]', { timeout: 30000 }).should('be.visible');\n// Select Existing Product\ncy.get('[data-cy=\"existing-product-estimation\"]').click();\ncy.selectKendoDropdownListItem('existing-product-estimation-customer', 'BAV SERIES LLC');\ncy.selectKendoDropdownListItem('existing-product-estimation-madeForMarket', 'New Media');\ncy.selectKendoDropdownListItem('existing-product-estimation-product', 'BORN AGAIN VIRGIN');\ncy.get('[data-cy=\"existing-product-estimation-season\"]')\n    .click()\n    .then(() => {\n    cy.get('.k-list-item').then(($items) => {\n        const itemCount = $items.length;\n        const randomIndex = Math.floor(Math.random() * itemCount);\n        cy.wrap($items[randomIndex]).click();\n    });\n});\ncy.selectKendoDropdownListItem('existing-product-estimation-paymentType', 'Run');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'SAG-AFTRA');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'WGA');\ncy.contains('New Estimation', { timeout: 30000 }).click();\ncy.contains('SVOD').should('be.visible');\ncy.contains('FSVOD').should('be.visible');\n//click next button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n//Navigate through the form\nconst formSelector = 'form[name=\"estimateForm\"]';\ncy.get(`${formSelector} [data-cy=\"epe-previously-paid-year\"]`, { timeout: 30000 }).click();\ncy.get(`${formSelector} [data-cy=\"epe-guilds-data\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get(`${formSelector} [data-cy=\"epe-trigger-run-info\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get('table.table.table-bordered thead').should('contain', 'Reuse Market').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead').should('contain', 'Run Number').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead').should('contain', 'Last Year Paid').eq(1).scrollIntoView(); //NODATACY\ncy.get('table.table.table-bordered thead').should('contain', 'Percentage').eq(1).scrollIntoView(); //NODATACY\ncy.get(`${formSelector} [data-cy=\"epe-paid-history\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get('table.table-bordered thead', { timeout: 30000 }).should('contain', 'Reuse Market').eq(2).scrollIntoView(); //NODATACY\ncy.get('table.table-bordered thead', { timeout: 30000 }).should('contain', 'ITD'); //NODATACY\n//Click Next Button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click({ force: true });\n// New Runs\ncy.get(`${formSelector} [data-cy=\"epe-new-runs\"]`, { timeout: 30000 }).scrollIntoView().click();\ncy.get(`${formSelector} [data-cy=\"epe-new-runs-input\"]`, { timeout: 30000 }).scrollIntoView().type('2');\n//Click Next Button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click({ force: true });\n// Verify Estimate Section\ncy.contains('Estimate:').scrollIntoView().should('be.visible');\ncy.get('[class=\"ng-star-inserted k-expander\"]', { timeout: 30000 }).eq(0).scrollIntoView().should('be.visible');\ncy.get('[class=\"ng-star-inserted k-expander\"]', { timeout: 30000 }).eq(0).click();\n// Expand Estimation Summary Sections\ncy.get('[role=\"rowgroup\"]').eq(2).should('contain', 'DOM Obligation').and('contain', 'FO Obligation');\ncy.get('[role=\"rowgroup\"]')\n    .eq(3)\n    .each(($row) => {\n    cy.wrap($row).find('td').eq(6).invoke('text').should('match', /\\d|,/);\n    cy.wrap($row).find('td').eq(7).invoke('text').should('match', /\\d|,/);\n});\ncy.get('[class=\"k-expander-header\"]', { timeout: 30000 }).eq(7).scrollIntoView().should('be.visible');\ncy.get('[class=\"k-expander-header\"]', { timeout: 30000 }).eq(7).click();\ncy.get('[class=\"k-expander-content\"]', { timeout: 30000 }).eq(7).scrollIntoView().find('table').and('exist');",
              "err": {},
              "uuid": "e9498216-1ce2-46c9-b9f0-7c8f9230057a",
              "parentUUID": "eeb1efc8-32c2-464c-b34e-88dd73df550a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9498216-1ce2-46c9-b9f0-7c8f9230057a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b3bedc3-b8ca-4d6c-a2ba-e3450774b569",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC007.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC007.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3efdb102-fb93-4607-9bcc-57c1fb8e3080",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC007.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC007.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC007",
              "fullTitle": "Residual TC007",
              "timedOut": null,
              "duration": 35500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Module: Residual - Estimates\n    Last Updated: Syed (27/2/2025)\n    High-Level Test Steps:\n    1. Verify user is able to generate estimate in either excel or pdf and is also able to preview the data in either excel or pdf for Made for Market  = New Media and Reuse markets = SVOD, FSVOD for existing products\n    Expected\n    */\n// Navigate to Estimates page\ncy.visit('resid/estimation-search/0');\n// Ensure the \"New Estimation\" button is visible\ncy.get('[data-cy=\"new-estimation\"]', { timeout: 80000 }).should('be.visible');\n// Click the \"New Estimation\" button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify the estimation type options\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select \"Existing Product Estimation\"\ncy.get('[data-cy=\"existing-product-estimation\"]').check();\n// Verify the \"New Estimation\" dialog appears\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 80000 }).contains('New Estimation').should('be.visible'); // NODATACY\n// Select Customer, Market, Product, Guilds, Reuse\ncy.selectKendoDropdownListItem('existing-product-estimation-customer', 'PURE FLIX ENTERTAINMENT LLC');\ncy.selectKendoDropdownListItem('existing-product-estimation-madeForMarket', 'Theatrical');\ncy.selectKendoDropdownListItem('existing-product-estimation-product', 'BOOK OF DANIEL, THE');\ncy.selectKendoMultiSelectListItems('existing-product-estimation-guilds', ['SAG']);\ncy.get('[class=\"k-window-title k-dialog-title\"]').contains('New Estimation').click(); // NODATACY\ncy.selectKendoMultiSelectListItem('existing-product-estimation-reuseMarkets', 'Basic');\ncy.get('[class=\"k-window-title k-dialog-title\"]').contains('New Estimation').click(); // NODATACY\n// Verify and click next buton\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 80000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\n// Verify Customer ID is visible (confirming page load)\ncy.contains('Customer Id:', { timeout: 80000 }).should('be.visible'); // NODATACY\n// Navigate through Revenue and Payment history sections\ncy.get('[data-cy=\"epe-trigger-revenue-info\"]').click();\ncy.get('[data-cy=\"epe-paid-history\"]').scrollIntoView();\ncy.get('[data-cy=\"epe-paid-history\"]').click();\n// Verify and click next button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 80000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click();\ncy.get('[class=\"k-window-content k-dialog-content ng-tns-c756294696-2\"]', { timeout: 80000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"k-window-content k-dialog-content ng-tns-c756294696-2\"]').scrollIntoView(); // NODATACY\n// Select and input Gross Receipts value\ncy.get('[data-cy=\"epe-gross-receipts-itd\"]').check();\ncy.get('[data-cy=\"epe-gross-receipts-value\"]', { timeout: 80000 }).should('be.visible');\ncy.get('[data-cy=\"epe-gross-receipts-value\"]').type('200000000');\n// Verify and click next button\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]', { timeout: 80000 }).should('be.visible');\ncy.get('[data-cy=\"existing-estimation-dialog-submit\"]').click({ force: true });\ncy.get('[data-cy=\"epe-estimate\"]').scrollIntoView();\ncy.get('[data-cy=\"epe-estimate\"]').click();\ncy.get('[role=\"gridcell\"]', { timeout: 80000 }).contains('Y', { timeout: 80000 }).scrollIntoView(); // NODATACY\ncy.get('[role=\"gridcell\"]', { timeout: 80000 }).contains('Y', { timeout: 80000 }).should('be.visible'); // NODATACY\ncy.get('[data-cy=\"existing-estimation-dialog-generate-report\"]', { timeout: 80000 }).should('be.visible');\n// Verify and click generate button\ncy.get('[data-cy=\"existing-estimation-dialog-generate-report\"]').trigger('click') /* .click({ force: true }) */;\n// Verify PDF and Excel options are available\ncy.contains('.k-menu-link-text', 'PDF').should('be.visible'); // NODATACY\ncy.contains('.k-menu-link-text', 'Excel').should('be.visible'); // NODATACY\n// Stub window.open to track downloads\ncy.window().then((win) => {\n    cy.stub(win, 'open').callsFake((url) => {\n        win.location.href = url;\n    });\n});\n// Click \"Excel\" to download the report\ncy.contains('.k-menu-link-text', 'Excel').click();\ncy.exec('powershell -Command \"Get-ChildItem cypress/downloads/*.xls | Sort-Object LastWriteTime -Descending | Select-Object -First 1 | ForEach-Object { $_.FullName }\"', { timeout: 80000 }).then((result) => {\n    const downloadedFilePath = result.stdout.trim();\n    if (downloadedFilePath) {\n        cy.log(`Downloaded file: ${downloadedFilePath}`);\n        cy.readFile(downloadedFilePath, { timeout: 80000 }).should('exist');\n    }\n    else {\n        throw new Error('No downloaded file found');\n    }\n});",
              "err": {},
              "uuid": "4e9c89c7-820f-4f2e-b270-0ef94c29693e",
              "parentUUID": "3efdb102-fb93-4607-9bcc-57c1fb8e3080",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e9c89c7-820f-4f2e-b270-0ef94c29693e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a87436eb-4a82-48dd-bc9d-ba4678238465",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC009.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC009.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b3fef33-0bbe-42d7-ad19-ef4d03628ab7",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC009.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC009.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC037",
              "fullTitle": "Residual TC037",
              "timedOut": null,
              "duration": 15430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Aiman (17/3/2025)\nHigh-Level Test Steps:\n1.\nExpected\n*/\ncy.visit('resid/estimation-search/0');\n//Click New Estimation Button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n//Verify Estimate For's Dialog is visible\ncy.contains('Estimate For', { timeout: 30000 }).should('be.visible');\n//New Product and Exciting Product radio button\ncy.get('[data-cy=\"existing-product-estimation\"]').should('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('be.visible');\n// Select Existing Product\ncy.get('[data-cy=\"existing-product-estimation\"]').click();\ncy.selectKendoDropdownListItem('existing-product-estimation-customer', 'BAV SERIES LLC');\ncy.selectKendoDropdownListItem('existing-product-estimation-madeForMarket', 'New Media');\ncy.selectKendoDropdownListItem('existing-product-estimation-product', 'BORN AGAIN VIRGIN');\ncy.get('[data-cy=\"existing-product-estimation-season\"]')\n    .click()\n    .then(() => {\n    cy.get('.k-list-item').then(($items) => {\n        const itemCount = $items.length;\n        const randomIndex = Math.floor(Math.random() * itemCount);\n        cy.wrap($items[randomIndex]).click();\n    });\n});\ncy.selectKendoDropdownListItem('existing-product-estimation-paymentType', 'Run');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'SAG-AFTRA');\ncy.selectKendoMultiSelectListItem('existing-product-estimation-guilds', 'WGA');\ncy.contains('New Estimation', { timeout: 30000 }).click();\ncy.get('[data-cy=\"existing-product-estimation-reuseMarkets\"]', { timeout: 30000 })\n    .children()\n    .should(($el) => {\n    expect($el.text()).to.include('SVOD');\n    expect($el.text()).to.include('FSVOD');\n});",
              "err": {},
              "uuid": "f91785c6-2d4a-47da-87b3-73d255947f8e",
              "parentUUID": "9b3fef33-0bbe-42d7-ad19-ef4d03628ab7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f91785c6-2d4a-47da-87b3-73d255947f8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "47a691de-9ac0-4444-955f-621daa8e8e13",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC012.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC012.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6571841-4b8d-4094-a219-6c0f070d0872",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC012.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC012.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC0012",
              "fullTitle": "Residual TC0012",
              "timedOut": null,
              "duration": 10369,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (28/2/2025)\nHigh-Level Test Steps:\n1. Verify that on new product estimate, product name is renamed to estimate Name\nExpected\n*/\n// Navigate to Estimates section\ncy.visit('resid/estimation-search/0');\n// Click the \"New Estimation\" button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify estimation options exist\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select New Product Estimation\ncy.get('[data-cy=\"new-product-estimation\"]').check();\n// Verify that \"Estimate Name\" is visible instead of \"Product Name\"\ncy.contains('Estimate Name', { timeout: 30000 }).should('be.visible'); // NODATACY",
              "err": {},
              "uuid": "b7ef8d9c-77a2-4ec1-82c4-beda93ab17bd",
              "parentUUID": "d6571841-4b8d-4094-a219-6c0f070d0872",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7ef8d9c-77a2-4ec1-82c4-beda93ab17bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fb0d6fa4-bb08-4336-a61e-a99d726f571a",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC013.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC013.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f8d27ca-fdbe-4137-94ac-e193f5397533",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC013.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC013.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC013",
              "fullTitle": "Residual TC013",
              "timedOut": null,
              "duration": 8440,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (28/2/2025)\nHigh-Level Test Steps:\n1.  Verify that on estimate search screen \"Product Name\" is renamed  to \"Estimate Name\" (on search filters and search results)\nExpected\n*/\n// Navigate to Estimates section\ncy.visit('resid/estimation-search/0');\n// Verify that the column title \"Estimate Name\" is present on the search screen\ncy.get('[class=\"k-column-title\"]', { timeout: 30000 }).contains('Estimate Name').should('be.visible'); // NODATACY\n// Verify that the search button is visible and click it to trigger search\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-button\"]').click();\n// Verify that search results contain at least one row with data\ncy.get('td.k-table-td').contains('a', '1').should('be.visible'); // NODATACY\n// Re-verify that the column title \"Estimate Name\" is still present after search\ncy.get('[class=\"k-column-title\"]', { timeout: 30000 }).contains('Estimate Name').should('be.visible'); // NODATACY",
              "err": {},
              "uuid": "d0640645-b600-44a8-84c0-31485811198f",
              "parentUUID": "6f8d27ca-fdbe-4137-94ac-e193f5397533",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0640645-b600-44a8-84c0-31485811198f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8707b25f-bdd4-409b-9be9-c986964ca248",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC014.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC014.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5182863a-636d-48ad-8291-cc5130bf17d8",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC014.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC014.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC014",
              "fullTitle": "Residual TC014",
              "timedOut": null,
              "duration": 18160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (27/2/2025)\nHigh-Level Test Steps:\n1. Verify that user is able to save and view a  saved existing Product Estimate  from estimate search screen\nExpected\n*/\n// Navigate to Estimates section\ncy.visit('resid/estimation-search/0');\n// Verify the \"New Estimation\" button is visible before interacting\ncy.get('[data-cy=\"new-estimation\"]', { timeout: 30000 }).should('be.visible');\n// Click on \"New Estimation\" button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify that both \"Existing Product\" and \"New Product\" estimation options are available\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select \"New Product Estimation\" option\ncy.get('[data-cy=\"new-product-estimation\"]').check();\n// Verify that the \"New Estimation\" dialog is displayed\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 30000 }).contains('New Estimation').should('be.visible'); // NODATACY\n// Generate a unique estimate name using a random number\nconst randomNum = Math.floor(Math.random() * 1000);\nconst estimateName = `Test Estimates ${randomNum}`;\n// Store the value for later use in the test\ncy.wrap(estimateName).as('estimateName');\n// Log the generated name in Cypress console\ncy.log(`Generated Estimate Name: ${estimateName}`);\n// Input the estimate name\ncy.get('input[name=\"EstimateName\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"EstimateName\"]').type(estimateName); // NODATACY\n// Select values from dropdown fields\ncy.selectKendoDropdownListItemCustomChild('[name=\"madeForMarket\"]', 'Theatrical', 1); // NODATACY\ncy.selectKendoDropdownListItemCustomChild('[name=\"subMarket\"]', '--N/A-', 0); // NODATACY\n// Input runtime\ncy.get('input[name=\"Runtime\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"Runtime\"]').type('120'); // NODATACY\n// Select multiple values from multi-select fields\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"masterGuilds\"]', ['SAG-AFTRA', 'DGA'], 0); // NODATACY\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"reuseMarketList\"]', ['SVOD'], 0); // NODATACY\n// Select a date from the date picker\ncy.selectKendoDatePickerFieldCustomChild('[name=\"principalPhotoDate\"]', '1/1/2021', 0); // NODATACY\n// Stub window.open to remain in the same page\ncy.window().then((win) => {\n    cy.stub(win, 'open').callsFake((url) => {\n        win.location.href = url;\n    });\n});\n// Click \"Next\"\ncy.get('[class=\"btn btn-primary\"]', { timeout: 3000 }).contains('Next').should('be.visible'); // NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Next').click(); // NODATACY\n// Click \"Save Estimate\"\ncy.get('[class=\"btn btn-primary\"]', { timeout: 3000 }).contains('Save Estimate').should('be.visible'); // NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Save Estimate').click(); // NODATACY\n// Verify that the estimation is saved successfully\ncy.contains('Estimation is saved.'); // NODATACY\n// Navigate back to the Estimates search screen\ncy.visit('resid/estimation-search/0');\n// Verify that the estimate name input field is visible before typing\ncy.get('[data-cy=\"estimate-name-input\"]', { timeout: 30000 }).should('be.visible');\n// Enter the saved estimate name in the search field\ncy.get('@estimateName').then((name) => {\n    cy.get('[data-cy=\"estimate-name-input\"]', { timeout: 30000 }).should('be.visible').type(name);\n});\n// Click the search button\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-button\"]').click();\n// Verify that the newly created estimate is visible in search results\ncy.get('@estimateName').then((name) => {\n    cy.get('td.k-table-td').contains('a', name).should('be.visible');\n});",
              "err": {},
              "uuid": "d3d12989-1cb3-476f-a83a-e9ce62361bf4",
              "parentUUID": "5182863a-636d-48ad-8291-cc5130bf17d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3d12989-1cb3-476f-a83a-e9ce62361bf4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc3a6f49-3c69-431d-bc89-302eabfe0ae8",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC016.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC016.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ffd45a4-8691-4f5c-bf0a-b9efd2518c00",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC016.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC016.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC016",
              "fullTitle": "Residual TC016",
              "timedOut": null,
              "duration": 21529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (28/2/2025)\nHigh-Level Test Steps:\n1. Verify that user is able to search and view the saved estimates and which should be same as the original estimate\nExpected\n*/\n// Navigate to Estimates section\ncy.visit('resid/estimation-search/0');\n// Verify \"New Estimation\" button is visible\ncy.get('[data-cy=\"new-estimation\"]', { timeout: 30000 }).should('be.visible');\n// Verify that the estimate name input field is visible\ncy.get('[data-cy=\"estimate-name-input\"]', { timeout: 30000 }).should('be.visible');\n// Enter the estimate name in the search field\ncy.get('[data-cy=\"estimate-name-input\"]').type('Test 21');\n// Verify that the search button is visible and click it\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-button\"]').click();\n// Verify that the search results contain the estimate \"Test 21\"\ncy.get('td.k-table-td', { timeout: 30000 }).contains('a', 'Test 21', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Click on the estimate link to open its details\ncy.get('td.k-table-td').contains('a', 'Test 21').invoke('removeAttr', 'target').click(); // NODATACY\n// Verify that the user is navigated to the Residual Estimation page\ncy.get('[data-cy=\"page-title\"]', { timeout: 30000 }).contains('Residual Estimation').should('be.visible');\n// Verify that the estimate name input field contains the correct value\ncy.get('[data-cy=\"estimate-name-input\"]', { timeout: 30000 }).should('be.visible').and('have.value', 'Test 21');",
              "err": {},
              "uuid": "0ca5a20c-7d4b-4700-baa6-c629aba5412b",
              "parentUUID": "5ffd45a4-8691-4f5c-bf0a-b9efd2518c00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ca5a20c-7d4b-4700-baa6-c629aba5412b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cfb4ffef-1bcf-4eb4-9a89-72006e35de0a",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC017.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC017.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eab4f9c0-a954-4507-8b90-ca4d9d24246f",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC017.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC017.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC017",
              "fullTitle": "Residual TC017",
              "timedOut": null,
              "duration": 16988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (27/2/2025)\nHigh-Level Test Steps:\n1. Verify that user is able to save and view a  saved existing Product Estimate  from estimate search screen\nExpected\n*/\n// Navigate to Estimates section\ncy.visit('resid/estimation-search/0');\n// Verify \"New Estimation\" button is visible\ncy.get('[data-cy=\"new-estimation\"]', { timeout: 30000 }).should('be.visible');\n// Click \"New Estimation\" button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify options for estimation type exist and are visible\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select \"New Product Estimation\"\ncy.get('[data-cy=\"new-product-estimation\"]').check();\n// Verify the \"New Estimation\" dialog appears\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 30000 }).contains('New Estimation').should('be.visible'); // NODATACY\n// Generate a unique estimate name using a random number\nconst randomNum = Math.floor(Math.random() * 1000);\nconst estimateName = `Test Estimates ${randomNum}`;\n// Store the value for later use in the test\ncy.wrap(estimateName).as('estimateName');\n// Log the generated name in Cypress console\ncy.log(`Generated Estimate Name: ${estimateName}`);\n// Verify the Estimate Name input field is visible and enter the generated name\ncy.get('input[name=\"EstimateName\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"EstimateName\"]').type(estimateName); // NODATACY\n// Select options from dropdown lists\ncy.selectKendoDropdownListItemCustomChild('[name=\"madeForMarket\"]', 'Theatrical', 1); // NODATACY\ncy.selectKendoDropdownListItemCustomChild('[name=\"subMarket\"]', '--N/A-', 0); // NODATACY\n// Enter Runtime value\ncy.get('input[name=\"Runtime\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"Runtime\"]').type('120'); // NODATACY\n// Select multiple options from Multi-Select dropdown lists\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"masterGuilds\"]', ['SAG-AFTRA', 'DGA'], 0); // NODATACY\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"reuseMarketList\"]', ['SVOD'], 0); // NODATACY\n// Set date\ncy.selectKendoDatePickerFieldCustomChild('[name=\"principalPhotoDate\"]', '1/1/2021', 0); // NODATACY\n// Stub window.open to remain in the same page\ncy.window().then((win) => {\n    cy.stub(win, 'open').callsFake((url) => {\n        win.location.href = url;\n    });\n});\n// Click \"Next\" button\ncy.get('[class=\"btn btn-primary\"]', { timeout: 3000 }).contains('Next').should('be.visible'); // NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Next').click(); // NODATACY\n// Click \"Save Estimate\" button\ncy.get('[class=\"btn btn-primary\"]', { timeout: 3000 }).contains('Save Estimate').should('be.visible'); // NODATACY\ncy.get('[class=\"btn btn-primary\"]').contains('Save Estimate').click(); // NODATACY\n// Ensure no errors appear after saving\ncy.contains('Error').should('not.exist'); // NODATACY",
              "err": {},
              "uuid": "55df77f5-3d88-482c-a6b8-d2d9a04611ce",
              "parentUUID": "eab4f9c0-a954-4507-8b90-ca4d9d24246f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55df77f5-3d88-482c-a6b8-d2d9a04611ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16988,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "24e7ed3f-ec63-4a2d-93d1-e4bf4a04acdf",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-estimates-TC018.cy.ts",
      "file": "src\\e2e\\kl\\residuals-estimates-TC018.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "052bbcdd-cfbe-457b-8f3d-9f1085f1167e",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-estimates-TC018.cy.ts",
          "file": "src\\e2e\\kl\\residuals-estimates-TC018.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC018",
              "fullTitle": "Residual TC018",
              "timedOut": null,
              "duration": 14893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Estimates\nLast Updated: Syed (27/2/2025)\nHigh-Level Test Steps:\n1.\nExpected\n*/\n// Navigate to the Estimates\ncy.visit('resid/estimation-search/0');\n// Click \"New Estimation\" button\ncy.get('[data-cy=\"new-estimation\"]')\n    .wait(1000) //Need to use wait, because if dont wait, it will straight up chooose new product's radio button\n    .click();\n// Verify estimation type options exist and are visible\ncy.get('[data-cy=\"existing-product-estimation\"]').should('exist').and('be.visible');\ncy.get('[data-cy=\"new-product-estimation\"]').should('exist').and('be.visible');\n// Select \"New Product Estimation\"\ncy.get('[data-cy=\"new-product-estimation\"]').check();\n// Ensure the \"New Estimation\" dialog appears\ncy.get('[class=\"k-window-title k-dialog-title\"]', { timeout: 30000 }).contains('New Estimation').should('be.visible'); // NODATACY\n// Enter Estimate Name\ncy.get('input[name=\"EstimateName\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"EstimateName\"]').type('Test Estimates'); // NODATACY\n// Select values from dropdown lists\ncy.selectKendoDropdownListItemCustomChild('[name=\"madeForMarket\"]', 'New Media', 1); // NODATACY\ncy.selectKendoDropdownListItemCustomChild('[name=\"subMarket\"]', 'HBSVOD', 0); // NODATACY\n// Enter Runtime value\ncy.get('input[name=\"Runtime\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"Runtime\"]').type('60'); // NODATACY\n// Select multiple options from Multi-Select dropdown lists\ncy.selectKendoMultiSelectListItemCustomChild('[name=\"masterGuilds\"]', 'SAG-AFTRA', 0); // NODATACY\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"reuseMarketList\"]', ['SVOD', 'AVOD'], 0); // NODATACY\n// Set Date\ncy.selectKendoDatePickerFieldCustomChild('[name=\"principalPhotoDate\"]', '1/1/2019', 0); // NODATACY\n// Select Subscription Tier, verify the dropdown for subscriber factor selection are displayed\ncy.get('[name=\"subscriptionTier\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('[name=\"subscriptionTier\"]', { timeout: 30000 }).click(); // NODATACY\ncy.get('.k-list-item', { timeout: 30000 }).should('be.visible');",
              "err": {},
              "uuid": "84065fde-64fd-402e-b675-072534c5f39f",
              "parentUUID": "052bbcdd-cfbe-457b-8f3d-9f1085f1167e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84065fde-64fd-402e-b675-072534c5f39f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14893,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7b648c9-1a7e-4500-b914-52faaf1a3a9a",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-focus-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-focus-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71a6f82b-1206-41f4-9d1c-ef9e9b5db9dc",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-focus-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-focus-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001",
              "fullTitle": "Residual TC001",
              "timedOut": null,
              "duration": 10239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (26/2/2025)\nHigh Level Test Steps:\n1. Verify that the Residuals Invoice Listing screen has option for user to search by \"Invoice Number\" and the existing \"Status\" field allows multi status search\n\nExpected: -\n*/\n//Go to payment\ncy.visit('resid/residuals-payment');\n// Ensure the Product ID input field is visible before proceeding\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n//Verify Manual Payment and Invoice Listing button , click Invoice Listing Button\ncy.get('[data-cy=\"add-manual-payment-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"invoice-listing-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"invoice-listing-btn\"]').click();\n// Verify that the Invoice Number input field is visible, then clear and enter a value\ncy.get('input[name=\"invoiceNumber\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"invoiceNumber\"]').clear(); // NODATACY\ncy.get('input[name=\"invoiceNumber\"]').type('12345'); // NODATACY\n// Select multiple invoice statuses from the dropdown list\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"invoiceStatus\"]', ['Open', 'On Hold'], 0); // NODATACY",
              "err": {},
              "uuid": "f537e623-cfa1-4278-bac4-79bbbd1e5995",
              "parentUUID": "71a6f82b-1206-41f4-9d1c-ef9e9b5db9dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f537e623-cfa1-4278-bac4-79bbbd1e5995"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10239,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "91b3c48d-11e6-4d9b-a179-c2d44007a304",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-focus-TC002.cy.ts",
      "file": "src\\e2e\\kl\\residuals-focus-TC002.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf2716a2-eb21-4cad-98bd-b72d91508d16",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-focus-TC002.cy.ts",
          "file": "src\\e2e\\kl\\residuals-focus-TC002.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC002",
              "fullTitle": "Residual TC002",
              "timedOut": null,
              "duration": 16188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (26/2/2025)\nHigh Level Test Steps:\n1. Verify that on the Residuals  Invoice Listing screen the field  \"Status\" field shows users the options for \"Delivered\" and \"Payment Received\" -\n\nExpected: -\n*/\n//Go to payment\ncy.visit('resid/residuals-payment');\n// Ensure the Product ID input field is visible before proceeding\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n//Verify Manual Payment and Invoice Listing button , click Invoice Listing Button\ncy.get('[data-cy=\"add-manual-payment-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"invoice-listing-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"invoice-listing-btn\"]').click();\n// Select multiple invoice statuses from the dropdown list\ncy.selectKendoMultiSelectListItemsCustomChild('[name=\"invoiceStatus\"]', ['Delivered', 'Payment Received'], 0); // NODATACY",
              "err": {},
              "uuid": "9e14da57-652c-4fae-a376-403bfb690b79",
              "parentUUID": "cf2716a2-eb21-4cad-98bd-b72d91508d16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e14da57-652c-4fae-a376-403bfb690b79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f359f4ce-8780-408f-85f9-f793a5b20a86",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-obligation-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-obligation-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8bf4b43a-dd2b-4537-a8dd-1a79f053e1ad",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-obligation-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-obligation-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001",
              "fullTitle": "Residual TC001",
              "timedOut": null,
              "duration": 107653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/* Module:\n   Last Updated: Syed (24/02/2025)\n   High Level Step:\n   1. Verify that for HBSVOD product the SVOD the obligations are calculated as per the updates made to subscriberfactor table\n   Expected: */\n/////////////////////////////////////////////////////////////////\n//Navigate to residual product\ncy.visit('resid/residuals-search');\n// Verify product master grid is visible before interacting\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\n// Enter product ID in input field\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').clear();\ncy.get('[data-cy=\"product-id-input\"]').type('17739-01-000101', { delay: 200 });\n// Click on Search button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible').contains('Search').click({ force: true });\n// Verify the product ID exists in the search results and click on it\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"0\"] a') // NODATACY\n    .should('exist')\n    .and('contain', '17739-01-000101')\n    .invoke('removeAttr', 'target')\n    .click({ force: true });\n// Verify that the Episode Name field is populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Click on the Clone button\ncy.contains('Clone', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .click({ force: true });\n// Read episode data from a fixture file\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Clear and enter new episode name\n    cy.get('input[name=\"EpisodeName\"]', { timeout: 90000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').click({ force: true }); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').type('Testing Adventure', { delay: 300 }); // NODATACY\n    // Generate and enter a random season number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900); // Generates a random 3-digit number (100-999)\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    // Clear and enter new episode number\n    cy.get('input[name=\"EpisodeNumber\"]', { timeout: 50000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeNumber\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    cy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\n    //Choose from dropdown\n    cy.get('[name=\"productMaster.subMarket\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HBSVOD').click(); // NODATACY\n    //Choose service name\n    cy.get('[name=\"serviceName\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HULU').click(); // NODATACY\n    // Enter Principal Photo Date\n    cy.get('[data-cy=\"principal-photo-date\"]', { timeout: 50000 }).should('be.visible');\n    cy.get('input#datepicker-1').clear(); // NODATACY\n    cy.get('input#datepicker-1').type('02/18/2018');\n    cy.get('input#datepicker-1').blur();\n    //Enter WGA Contact Date\n    cy.get('input#datepicker-3').clear(); // NODATACY\n    cy.get('input#datepicker-3').type('02/18/2018');\n    cy.get('input#datepicker-3').blur();\n    // Click on Update Product button\n    cy.contains('Update Product', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n});\n// Verify that product was updated successfully\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.reload();\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Navigate to Cast List tab\ncy.get('[class=\"nav-link\"]', { timeout: 80000 }) // NODATACY\n    .contains('Cast List', { timeout: 80000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is present in Cast List\ncy.get('[role=\"columnheader\"]', { timeout: 50000 }).contains('Employee Id', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to Product Master tab\ncy.get('[class=\"nav-link\"]', { timeout: 50000 }) // NODATACY\n    .contains('Product Master', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Episode Name field is still populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Check checkboxes for \"Sent to Client\" and \"Approved by Client\"\ncy.get('input[name=\"productMaster.sentToClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\ncy.get('input[name=\"productMaster.approvedByClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\n// Click on Update Product button again\ncy.contains('Update Product', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify product update confirmation\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.reload();\n// Navigate back to Cast List\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Cast List', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Locate SAG-AFTRA section and click on Calculate Prorata\ncy.contains('SAG-AFTRA', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify prorata shares were calculated successfully\ncy.contains('Prorata shares calculated successfully.', { timeout: 90000 }).should('be.visible'); // NODATACY\n//choose one of the cast\ncy.get('[class=\"fa fa-edit\"]:first', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Birth Date and Name fields are visible\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Birth Date', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Name', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Navigate to Prorata Shares tab\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Prorata Shares', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Prorata Shares section is visible\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 90000 }).should('be.visible');\n// Click Update, Guild, and Return to Cast List\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Update', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains(' Return to Cast List ', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Employee ID column and Calculate Prorata  is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Ensure the 'Lock' button for 'SAG-AFTRA' is visible and click\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock', { timeout: 50000 }).should('be.visible'); // NODATACY\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock').click({ force: true }); // NODATACY\n// Ensure the 'Unlock' button appears after locking, confirming the lock action\ncy.contains('Unlock', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to the 'Product Master'\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }) // NODATACY\n    .contains('Product Master', { timeout: 30000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify the 'EpisodeName' input field is visible and not empty\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Retrieve the 'productID' from the input field and save it to a JSON file\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n});\n//Choose reuse market\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').click(); // NODATACY\ncy.get('.k-list-item').contains('SVOD').click(); // NODATACY\n//set release date\ncy.get('#datepicker-4').clear(); // NODATACY\ncy.get('#datepicker-4').type('03/12/2024');\ncy.get('#datepicker-4').blur();\n//Click button 'Add Release Date'\ncy.get('[class=\"btn btn-primary\"]').contains('Add Release Date').should('be.visible').click(); // NODATACY\ncy.contains('button', \"Yes, I'm sure\", { timeout: 10000 }).should('be.visible').click(); // NODATACY\n/////////////////////////////////////////////////////////////////\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId;\n    //  navigateToTrigger();\n    cy.visit('resid/trigger-search/revenuetriggers');\n    //Go to Usage Triggers tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Triggers', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Triggers').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    cy.get('kendo-grid').should('exist');\n    cy.get('table') // NODATACY\n        .find('td') // Find all table cells\n        .filter(':contains(\"SB\")') // Filter cells that contain \"SB\"\n        .each(($el) => {\n        cy.wrap($el).click(); // Click on the cell containing \"SB\"\n        // Ensure the popup appears and click \"No\"\n        cy.get('kendo-dialog-actions button', { timeout: 30000 })\n            .contains('No', { timeout: 30000 })\n            .should('be.visible')\n            .click({ force: true });\n    });\n    //check the checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Click the \"Approve\" button\n    cy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"approve-btn\"]').click({ force: true });\n    // Verify feedback notification appears\n    cy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible'); // NODATACY\n});\n////////////////////////////////////////////////////////////////\n//navigate To Obligations\ncy.visit('resid/guild-obligations/financeobligations');\n// Verify that the \"Usage Obligations\" tab is visible and click\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Obligations', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"nav-link\"]').contains('Usage Obligations').click({ force: true }); // NODATACY\n// Ensure the Product ID input field is visible and enter product ID\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n//////////\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n});\n// Click the search button\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-button\"]').click();\n// Validate that the expected guild name (\"SAG-AFTRA\") appears in the results\ncy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"5\"]').should('contain.text', 'SVOD');\n// Retrieve text from the eighth column, log it, and verify it's not empty\ncy.get('td[data-kendo-grid-column-index=\"8\"]')\n    .invoke('text')\n    .then((text) => {\n    cy.log('Cell Value:', text.trim());\n    expect(text.trim()).not.to.be.empty;\n});",
              "err": {},
              "uuid": "ea466839-d761-44b2-948c-4656db4efc25",
              "parentUUID": "8bf4b43a-dd2b-4537-a8dd-1a79f053e1ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea466839-d761-44b2-948c-4656db4efc25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 107653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15a8012d-a275-4c72-a8f6-b1e625ad24e7",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-obligation-TC004.cy.ts",
      "file": "src\\e2e\\kl\\residuals-obligation-TC004.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67c1ea14-0f56-4315-af45-e3033bd37463",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-obligation-TC004.cy.ts",
          "file": "src\\e2e\\kl\\residuals-obligation-TC004.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC056",
              "fullTitle": "Residual TC056",
              "timedOut": null,
              "duration": 59855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Obligation\nLast Updated : Aiman (19/3/2025)\nHigh Level Test Steps:\n1. Obligation\nVerify that the obligations for HBSVOD calculation for DGA/WGA is as per the  new updated formula F1012\nExpected: -\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'A24 FILMS, LLC');\ncy.get('input[name=\"productID\"]').clear().type('17845-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\n//verify residual details\ncy.contains('Residual Details', { timeout: 60000 });\ncy.contains('Cast List', { timeout: 60000 }).should('be.visible');\ncy.contains('Cast List', { timeout: 60000 }).click({ force: true });\ncy.get('[class=\"section-header card-header\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Rules').should('be.visible').click();\ncy.get('table tr', { timeout: 30000 })\n    .filter((index, row) => {\n    const text = row.innerText;\n    return (text.includes('SVOD') && text.includes('2017 HB SVOD')) || (text.includes('FSVOD') && text.includes('2017 FSVOD'));\n})\n    .should('have.length.at.least', 1);\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Cast').should('be.visible').click();\ncy.contains('WGA', { timeout: 60000 }).parent().find('button').contains('Rules').scrollIntoView().should('be.visible').click();\ncy.get('table tr', { timeout: 30000 })\n    .filter((index, row) => {\n    const text = row.innerText;\n    return (text.includes('SVOD') && text.includes('2017 HB SVOD')) || (text.includes('FSVOD') && text.includes('2017 FSVOD'));\n})\n    .should('have.length.at.least', 1);\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Cast').should('be.visible').click();\ncy.visit('resid/residuals-admin');\ncy.contains('Residual Admin', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"admin-action-select\"]', { timeout: 30000 }).should('exist').should('be.visible');\ncy.get('[data-cy=\"admin-action-select\"]', { timeout: 30000 }).select('Rules Configuration');\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).should('be.visible'); //NODATACY\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).click(); //NODATACY\ncy.get('.k-list-item').contains('DGA').click();\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Search').should('be.visible'); //NODATACY\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Search').click(); //NODATACY\ncy.get('tr.k-master-row', { timeout: 30000 }) //NODATACY\n    .filter((index, row) => {\n    const cells = Cypress.$(row).find('td');\n    return (Cypress.$(cells[5]).text().trim() === 'New Media' &&\n        Cypress.$(cells[6]).text().trim() === 'HBSVOD' &&\n        Cypress.$(cells[7]).text().trim() === '07/01/2020' &&\n        Cypress.$(cells[8]).text().trim() === '06/30/2021');\n})\n    .first()\n    .within(() => {\n    cy.get('button[name=\"view\"]').click(); //NODATACY\n});\ncy.contains('Continue', { timeout: 60000 }).should('be.visible');\ncy.contains('Continue', { timeout: 60000 }).click();\ncy.get('table.table-striped tbody tr', { timeout: 60000 }).should('contain', 'New Media').and('contain', 'HBSVOD'); //NODATACY\ncy.contains('Continue', { timeout: 60000 }).should('be.visible').click();\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).should('be.visible'); //NODATACY\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).click(); //NODATACY\ncy.get('.k-list-item', { timeout: 30000 }).contains('2020 HBSVOD').click(); //NODATACY\ncy.get('table.table-striped tbody tr', { timeout: 30000 }).should('contain', 'F1012'); // NODATACY\ncy.contains('Return to Rule Configuration', { timeout: 30000 }).should('be.visible').click();\ncy.visit('resid/guild-obligations/financeobligations', { timeout: 60000 });\ncy.contains('Usage Obligations', { timeout: 60000 }).should('be.visible').click();\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').type('17845-01-00101');\ncy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).click();\ncy.get('tr.k-master-row', { timeout: 30000 })\n    .eq(0)\n    .within(() => {\n    cy.get('td:nth-child(3)').should('not.be.empty'); // Guild\n    cy.get('td:nth-child(5)').should('not.be.empty'); // Made for Market\n    cy.get('td:nth-child(6)').should('not.be.empty'); // Reuse Market\n    cy.get('td:nth-child(9)').should('not.be.empty'); // ITD Obligation\n    cy.get('td:nth-child(11)').should('not.be.empty'); // Current Amt Due\n});",
              "err": {},
              "uuid": "4a34ddab-3bce-411a-a3a9-e2e54e93ab7d",
              "parentUUID": "67c1ea14-0f56-4315-af45-e3033bd37463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a34ddab-3bce-411a-a3a9-e2e54e93ab7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59855,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fdeda372-dc34-4ad8-a63a-5d62950f1c15",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-obligation-TC005.cy.ts",
      "file": "src\\e2e\\kl\\residuals-obligation-TC005.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7120f519-485c-4983-892d-4f4e14196fe4",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-obligation-TC005.cy.ts",
          "file": "src\\e2e\\kl\\residuals-obligation-TC005.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC057",
              "fullTitle": "Residual TC057",
              "timedOut": null,
              "duration": 43654,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Obligation\nLast Updated : Aiman (21/3/2025)\nHigh Level Test Steps:\n1. Obligation\n\"Verify that the HBSVOD obligations are correctly calculated and use the correct subscriber factor  for the formulas\nF1002, F1003, F1011, F1012 and products PPD < 7/1/2024\"\nExpected: -\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'A24 FILMS, LLC');\ncy.get('input[name=\"productID\"]').clear().type('17845-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\n//verify residual details\ncy.contains('Residual Details', { timeout: 60000 });\ncy.contains('Cast List', { timeout: 60000 }).should('be.visible');\ncy.contains('Cast List', { timeout: 60000 }).click({ force: true });\ncy.get('[class=\"section-header card-header\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Rules').should('be.visible').click();\ncy.get('table tr', { timeout: 30000 })\n    .filter((index, row) => {\n    const text = row.innerText;\n    return (text.includes('SVOD') && text.includes('2017 HB SVOD')) || (text.includes('FSVOD') && text.includes('2017 FSVOD'));\n})\n    .should('have.length.at.least', 1);\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Cast').should('be.visible').click();\ncy.contains('WGA', { timeout: 60000 }).parent().find('button').contains('Rules').scrollIntoView().should('be.visible').click();\ncy.get('table tr', { timeout: 30000 })\n    .filter((index, row) => {\n    const text = row.innerText;\n    return (text.includes('SVOD') && text.includes('2017 HB SVOD')) || (text.includes('FSVOD') && text.includes('2017 FSVOD'));\n})\n    .should('have.length.at.least', 1);\ncy.contains('DGA', { timeout: 60000 }).parent().find('button').contains('Cast').should('be.visible').click();\ncy.visit('resid/residuals-admin');\ncy.contains('Residual Admin', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"admin-action-select\"]', { timeout: 30000 }).should('exist').should('be.visible');\ncy.get('[data-cy=\"admin-action-select\"]', { timeout: 30000 }).select('Rules Configuration');\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).should('be.visible'); //NODATACY\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).click(); //NODATACY\ncy.get('.k-list-item').contains('DGA').click();\ncy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Search').should('be.visible').click(); //NODATACY\ncy.get('tr.k-master-row') //NODATACY\n    .filter((index, row) => {\n    const cells = Cypress.$(row).find('td');\n    return (Cypress.$(cells[5]).text().trim() === 'New Media' &&\n        Cypress.$(cells[6]).text().trim() === 'HBSVOD' &&\n        Cypress.$(cells[7]).text().trim() === '07/01/2020' &&\n        Cypress.$(cells[8]).text().trim() === '06/30/2021');\n})\n    .first()\n    .within(() => {\n    cy.get('button[name=\"view\"]').click(); //NODATACY\n});\ncy.contains('Continue', { timeout: 60000 }).should('be.visible');\ncy.contains('Continue', { timeout: 60000 }).click();\ncy.get('table.table-striped tbody tr', { timeout: 60000 }).should('contain', 'New Media').and('contain', 'HBSVOD'); //NODATACY\ncy.contains('Continue', { timeout: 60000 }).should('be.visible');\ncy.contains('Continue', { timeout: 60000 }).click();\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).should('be.visible'); //NODATACY\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(0).click(); //NODATACY\ncy.get('.k-list-item', { timeout: 30000 }).contains('2020 HBSVOD').click(); //NODATACY\ncy.get('table.table-striped tbody tr', { timeout: 30000 }).should('contain', 'F1012'); //NODATACY\ncy.contains('Return to Rule Configuration', { timeout: 30000 }).should('be.visible');\ncy.contains('Return to Rule Configuration', { timeout: 30000 }).click();\ncy.visit('resid/guild-obligations/financeobligations', { timeout: 60000 });\ncy.contains('Usage Obligations', { timeout: 60000 }).should('be.visible');\ncy.contains('Usage Obligations', { timeout: 60000 }).click();\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').type('17845-01-00101');\ncy.get('[data-cy=\"search-button\"]').click();\ncy.get('tr.k-master-row', { timeout: 30000 })\n    .eq(0)\n    .within(() => {\n    cy.get('td:nth-child(3)').should('not.be.empty'); // Guild\n    cy.get('td:nth-child(5)').should('not.be.empty'); // Made for Market\n    cy.get('td:nth-child(6)').should('not.be.empty'); // Reuse Market\n    cy.get('td:nth-child(9)').should('not.be.empty'); // ITD Obligation\n    cy.get('td:nth-child(11)').should('not.be.empty'); // Current Amt Due\n});",
              "err": {},
              "uuid": "868cc61c-5de5-4127-a1f9-28375fd038af",
              "parentUUID": "7120f519-485c-4983-892d-4f4e14196fe4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "868cc61c-5de5-4127-a1f9-28375fd038af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43654,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "83570129-e289-4dfc-ac47-5c86538423cf",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-payments-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-payments-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f0c0e95-7dcc-4709-a13b-7df91794f93e",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-payments-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-payments-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001",
              "fullTitle": "Residual TC001",
              "timedOut": null,
              "duration": 10500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (26/2/2025)\nHigh Level Test Steps:\n1. Verify that the new Series ID & Season ID fields are available for search on payments\n\nExpected: -\n*/\n//Go to payment\ncy.visit('resid/residuals-payment');\n// Verify that the Product ID input field is visible\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n// Verify the Series ID, Season ID input field is visible and enter a test value\ncy.get('input[name=\"seriesID\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"seriesID\"]').type('13319'); // NODATACY\ncy.get('input[name=\"seasonID\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"seasonID\"]').type('13319'); // NODATACY\n// Verify the search button is visible and click it\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click();\n// Validate that the expected guild name (\"SAG-AFTRA\") appears\ncy.get('td[data-kendo-grid-column-index=\"2\"]').should('contain.text', 'SAG-AFTRA');",
              "err": {},
              "uuid": "3690c366-bfb8-4fd4-95e4-e3e926a9447e",
              "parentUUID": "9f0c0e95-7dcc-4709-a13b-7df91794f93e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3690c366-bfb8-4fd4-95e4-e3e926a9447e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d6f775bb-09d3-42f7-b60d-039b00e82f53",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-payments-TC002.cy.ts",
      "file": "src\\e2e\\kl\\residuals-payments-TC002.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9729e2a5-5d5d-48d1-8f52-8dd4d83e0de4",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-payments-TC002.cy.ts",
          "file": "src\\e2e\\kl\\residuals-payments-TC002.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC002",
              "fullTitle": "Residual TC002",
              "timedOut": null,
              "duration": 7984,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (26/2/2025)\nHigh Level Test Steps:\n1. Verify that the Payments screen has option for user to search by \"Invoice Number\" and the existing \"Status\" field allows multi status search\n\nExpected: -\n*/\n//Go to payment\ncy.visit('resid/residuals-payment');\n// Verify that the Product ID input field is visible\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n// Verify the Invoice Number input field is visible, clear and input value\ncy.get('input[name=\"invoiceNumber\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\ncy.get('input[name=\"invoiceNumber\"]').clear(); // NODATACY\ncy.get('input[name=\"invoiceNumber\"]').type('123456'); // NODATACY\n// Select multiple statuses ('Invoiced' and 'Rejected') in the status dropdown\ncy.selectKendoMultiSelectListItems('voucher-status-select', ['Invoiced', 'Rejected']);",
              "err": {},
              "uuid": "b428513f-d219-4541-91d1-25be2ceac83f",
              "parentUUID": "9729e2a5-5d5d-48d1-8f52-8dd4d83e0de4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b428513f-d219-4541-91d1-25be2ceac83f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7984,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de6de504-eb28-4876-97d9-de89d22bfa10",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-payments-TC003.cy.ts",
      "file": "src\\e2e\\kl\\residuals-payments-TC003.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "25e5388c-0d7a-48c6-89f4-fbd71e843534",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-payments-TC003.cy.ts",
          "file": "src\\e2e\\kl\\residuals-payments-TC003.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC003",
              "fullTitle": "Residual TC003",
              "timedOut": null,
              "duration": 126575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n1. Verify that success/bonus metrics is calculated for SAG-AFTRA PPD>07/01/2024\nExpected: -\n*/\n//Clone Product\n//Navigate to residual product\ncy.visit('resid/residuals-search');\n// Verify product master grid is visible before interacting\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\n// Enter product ID in input field\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').clear();\ncy.get('[data-cy=\"product-id-input\"]').type('17739-01-000101', { delay: 200 });\n// Click on Search button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible').contains('Search').click({ force: true });\n// Verify the product ID exists in the search results and click on it\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"0\"] a') // NODATACY\n    .should('exist')\n    .and('contain', '17739-01-000101')\n    .invoke('removeAttr', 'target')\n    .click({ force: true });\n// Verify that the Episode Name field is populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Click on the Clone button\ncy.contains('Clone', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .click({ force: true });\n// Read episode data from a fixture file\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Clear and enter new episode name\n    cy.get('input[name=\"EpisodeName\"]', { timeout: 90000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').click({ force: true }); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').type('Testing Adventure', { delay: 300 }); // NODATACY\n    // Generate and enter a random season number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900); // Generates a random 3-digit number (100-999)\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    // Clear and enter new episode number\n    cy.get('input[name=\"EpisodeNumber\"]', { timeout: 50000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeNumber\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    cy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\n    //Choose from dropdown\n    cy.get('[name=\"productMaster.subMarket\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HBSVOD').click(); // NODATACY\n    //Choose service name\n    cy.get('[name=\"serviceName\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HULU').click(); // NODATACY\n    // Enter Principal Photo Date\n    cy.get('[data-cy=\"principal-photo-date\"]', { timeout: 50000 }).should('be.visible');\n    cy.get('input#datepicker-1').clear(); // NODATACY\n    cy.get('input#datepicker-1').type('02/18/2018');\n    cy.get('input#datepicker-1').blur();\n    //Enter WGA Contact Date\n    cy.get('input#datepicker-3').clear(); // NODATACY\n    cy.get('input#datepicker-3').type('02/18/2018');\n    cy.get('input#datepicker-3').blur();\n    // Click on Update Product button\n    cy.contains('Update Product', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n});\n// Verify that product was updated successfully\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.reload();\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Navigate to Cast List tab\ncy.get('[class=\"nav-link\"]', { timeout: 80000 }) // NODATACY\n    .contains('Cast List', { timeout: 80000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is present in Cast List\ncy.get('[role=\"columnheader\"]', { timeout: 50000 }).contains('Employee Id', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to Product Master tab\ncy.get('[class=\"nav-link\"]', { timeout: 50000 }) // NODATACY\n    .contains('Product Master', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Episode Name field is still populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Check checkboxes for \"Sent to Client\" and \"Approved by Client\"\ncy.get('input[name=\"productMaster.sentToClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\ncy.get('input[name=\"productMaster.approvedByClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\n// Click on Update Product button again\ncy.contains('Update Product', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify product update confirmation\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.reload();\n// Navigate back to Cast List\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Cast List', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Locate SAG-AFTRA section and click on Calculate Prorata\ncy.contains('SAG-AFTRA', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify prorata shares were calculated successfully\ncy.contains('Prorata shares calculated successfully.', { timeout: 90000 }).should('be.visible'); // NODATACY\n//choose one of the cast\ncy.get('[class=\"fa fa-edit\"]:first', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Birth Date and Name fields are visible\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Birth Date', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Name', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Navigate to Prorata Shares tab\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Prorata Shares', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Prorata Shares section is visible\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 90000 }).should('be.visible');\n// Click Update, Guild, and Return to Cast List\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Update', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains(' Return to Cast List ', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Employee ID column and Calculate Prorata  is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Ensure the 'Lock' button for 'SAG-AFTRA' is visible and click\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock', { timeout: 50000 }).should('be.visible'); // NODATACY\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock').click({ force: true }); // NODATACY\n// Ensure the 'Unlock' button appears after locking, confirming the lock action\ncy.contains('Unlock', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to the 'Product Master'\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }) // NODATACY\n    .contains('Product Master', { timeout: 30000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify the 'EpisodeName' input field is visible and not empty\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Retrieve the 'productID' from the input field and save it to a JSON file\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n});\n//Choose reuse market\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').click(); // NODATACY\ncy.get('.k-list-item').contains('SVOD').click(); // NODATACY\n//set release date\ncy.get('#datepicker-4').clear(); // NODATACY\ncy.get('#datepicker-4').type('03/12/2024');\ncy.get('#datepicker-4').blur();\n//Click button 'Add Release Date'\ncy.get('[class=\"btn btn-primary\"]').contains('Add Release Date').should('be.visible').click(); // NODATACY\ncy.contains('button', \"Yes, I'm sure\", { timeout: 10000 }).should('be.visible').click(); // NODATACY\n//Trigger\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId;\n    //  navigateToTrigger();\n    cy.visit('resid/trigger-search/revenuetriggers');\n    //Go to Usage Triggers tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Triggers', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Triggers').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    cy.get('kendo-grid').should('exist');\n    cy.get('table') // NODATACY\n        .find('td') // Find all table cells\n        .filter(':contains(\"SB\")') // Filter cells that contain \"SB\"\n        .each(($el) => {\n        cy.wrap($el).click(); // Click on the cell containing \"SB\"\n        // Ensure the popup appears and click \"Yes\"\n        cy.get('kendo-dialog-actions button', { timeout: 30000 })\n            .contains('Yes', { timeout: 30000 })\n            .should('be.visible')\n            .click({ force: true });\n    });\n    //check the checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Click the \"Approve\" button\n    cy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"approve-btn\"]').click({ force: true });\n    // Verify feedback notification appears\n    cy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible'); // NODATACY\n});\n//Obligation\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //  navigateToObligations();\n    cy.visit('resid/guild-obligations/financeobligations');\n    // Go to Usage Obligations tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Obligations', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Obligations').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, then click\n    cy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-button\"]').click();\n    // Ensure that the expected obligation record appears\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Select all records in the grid by checking the master checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Verify that the \"Approve\" button is visible, then clcik\n    cy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"btn btn-primary\"]').contains('Approve').click({ force: true });\n    // Verify that the success message confirming the update is displayed\n    cy.contains('Record(s) Updated', { timeout: 30000 }).should('be.visible'); // NODATACY\n});\n//navigate To Payments\ncy.visit('resid/residuals-payment');\n// Verify that the Product ID input field is visible, input product ID\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n});\n// Verify that the search button is visible and click it\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click();\n// Verify that the search results contain 'SAG-AFTRA'\ncy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Verify the \"Expand Details\" button is visible and click the first instance\ncy.get('a[title=\"Expand Details\"]', { timeout: 30000 }).should('be.visible');\ncy.get('a[title=\"Expand Details\"]').first().click();\n// Ensure the column headers are loaded properly\ncy.get('[role=\"columnheader\"]', { timeout: 30000 }).should('be.visible');\n// Verify that the specific cell (column index 1) contains a value\ncy.get('td[data-kendo-grid-column-index=\"1\"] span').invoke('text').should('not.be.empty');\n// Log and display the extracted cell value\ncy.get('td[data-kendo-grid-column-index=\"1\"] span')\n    .invoke('text')\n    .then((text) => {\n    cy.log('Cell value:', text);\n    console.log('Cell value:', text);\n});",
              "err": {},
              "uuid": "b81760a0-22e6-459f-836e-f4f9e1ad1048",
              "parentUUID": "25e5388c-0d7a-48c6-89f4-fbd71e843534",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b81760a0-22e6-459f-836e-f4f9e1ad1048"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 126575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "45b8ed70-b0a1-4093-a675-49db72c44832",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-payments-TC004.cy.ts",
      "file": "src\\e2e\\kl\\residuals-payments-TC004.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cb81c0af-d8c2-4588-bcda-f32e5c93da12",
          "title": "Residual",
          "fullFile": "src\\e2e\\kl\\residuals-payments-TC004.cy.ts",
          "file": "src\\e2e\\kl\\residuals-payments-TC004.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC003",
              "fullTitle": "Residual TC003",
              "timedOut": null,
              "duration": 120755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Syed (25/2/2025)\nHigh Level Test Steps:\n1. Verify that success/bonus metrics is calculated for SAG-AFTRA PPD>07/01/2024\nExpected: -\n*/\n//Clone Product\n//Navigate to residual product\ncy.visit('resid/residuals-search');\n// Verify product master grid is visible before interacting\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\n// Select customer from dropdown\ncy.selectKendoDropdownListItem('customer-dropdown', 'BAV SERIES LLC');\n// Enter product ID in input field\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible').clear();\ncy.get('[data-cy=\"product-id-input\"]').type('17739-01-000101', { delay: 200 });\n// Click on Search button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible').contains('Search').click({ force: true });\n// Verify the product ID exists in the search results and click on it\ncy.get('[data-cy=\"product-master-grid\"]', { timeout: 30000 }).should('be.visible');\ncy.get('td[data-kendo-grid-column-index=\"0\"] a') // NODATACY\n    .should('exist')\n    .and('contain', '17739-01-000101')\n    .invoke('removeAttr', 'target')\n    .click({ force: true });\n// Verify that the Episode Name field is populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Click on the Clone button\ncy.contains('Clone', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .click({ force: true });\n// Read episode data from a fixture file\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Clear and enter new episode name\n    cy.get('input[name=\"EpisodeName\"]', { timeout: 90000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').click({ force: true }); // NODATACY\n    cy.get('input[name=\"EpisodeName\"]').type('Testing Adventure', { delay: 300 }); // NODATACY\n    // Generate and enter a random season number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900); // Generates a random 3-digit number (100-999)\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    // Clear and enter new episode number\n    cy.get('input[name=\"EpisodeNumber\"]', { timeout: 50000 }).should('be.visible').clear(); // NODATACY\n    cy.get('input[name=\"EpisodeNumber\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    cy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\n    //Choose from dropdown\n    cy.get('[name=\"productMaster.subMarket\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HBSVOD').click(); // NODATACY\n    //Choose service name\n    cy.get('[name=\"serviceName\"]').click(); // NODATACY\n    cy.contains('.k-list-item', 'HULU').click(); // NODATACY\n    // Enter Principal Photo Date\n    cy.get('[data-cy=\"principal-photo-date\"]', { timeout: 50000 }).should('be.visible');\n    cy.get('input#datepicker-1').clear(); // NODATACY\n    cy.get('input#datepicker-1').type('02/18/2018');\n    cy.get('input#datepicker-1').blur();\n    //Enter WGA Contact Date\n    cy.get('input#datepicker-3').clear(); // NODATACY\n    cy.get('input#datepicker-3').type('02/18/2018');\n    cy.get('input#datepicker-3').blur();\n    // Click on Update Product button\n    cy.contains('Update Product', { timeout: 50000 }).should('be.visible').click({ force: true }); // NODATACY\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n});\n// Verify that product was updated successfully\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.reload();\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Navigate to Cast List tab\ncy.get('[class=\"nav-link\"]', { timeout: 80000 }) // NODATACY\n    .contains('Cast List', { timeout: 80000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is present in Cast List\ncy.get('[role=\"columnheader\"]', { timeout: 50000 }).contains('Employee Id', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to Product Master tab\ncy.get('[class=\"nav-link\"]', { timeout: 50000 }) // NODATACY\n    .contains('Product Master', { timeout: 50000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Episode Name field is still populated\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Check checkboxes for \"Sent to Client\" and \"Approved by Client\"\ncy.get('input[name=\"productMaster.sentToClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\ncy.get('input[name=\"productMaster.approvedByClient\"]', { timeout: 90000 }).should('be.visible').check(); // NODATACY\n// Click on Update Product button again\ncy.contains('Update Product', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify product update confirmation\ncy.contains('Product updated', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.reload();\n// Navigate back to Cast List\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Cast List', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Employee ID column is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Locate SAG-AFTRA section and click on Calculate Prorata\ncy.contains('SAG-AFTRA', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify prorata shares were calculated successfully\ncy.contains('Prorata shares calculated successfully.', { timeout: 90000 }).should('be.visible'); // NODATACY\n//choose one of the cast\ncy.get('[class=\"fa fa-edit\"]:first', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Birth Date and Name fields are visible\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Birth Date', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.get('[class=\"label-right left\"]', { timeout: 90000 }).contains('Name', { timeout: 90000 }).should('be.visible'); // NODATACY\n// Navigate to Prorata Shares tab\ncy.get('[class=\"nav-link\"]', { timeout: 90000 }) // NODATACY\n    .contains('Prorata Shares', { timeout: 90000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify Prorata Shares section is visible\ncy.get('[data-cy=\"prorata-shares-container\"]', { timeout: 90000 }).should('be.visible');\n// Click Update, Guild, and Return to Cast List\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Update', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains('Guild', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\ncy.contains(' Return to Cast List ', { timeout: 90000 }).should('be.visible').click({ force: true }); // NODATACY\n// Verify Employee ID column and Calculate Prorata  is  visible\ncy.get('[role=\"columnheader\"]', { timeout: 90000 }).contains('Employee Id', { timeout: 90000 }).should('be.visible'); // NODATACY\ncy.contains('Calculate Prorata', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Ensure the 'Lock' button for 'SAG-AFTRA' is visible and click\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock', { timeout: 50000 }).should('be.visible'); // NODATACY\ncy.contains('SAG-AFTRA').parent().find('[class=\"btn btn-secondary\"]').contains('Lock').click({ force: true }); // NODATACY\n// Ensure the 'Unlock' button appears after locking, confirming the lock action\ncy.contains('Unlock', { timeout: 50000 }).should('be.visible'); // NODATACY\n// Navigate to the 'Product Master'\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }) // NODATACY\n    .contains('Product Master', { timeout: 30000 })\n    .should('be.visible')\n    .click({ force: true });\n// Verify the 'EpisodeName' input field is visible and not empty\ncy.get('input[name=\"EpisodeName\"]', { timeout: 50000 }).should('be.visible').invoke('val').should('not.be.empty'); // NODATACY\n// Retrieve the 'productID' from the input field and save it to a JSON file\ncy.get('input[name=\"productMaster.productID\"]', { timeout: 50000 }) // NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((productId) => {\n    cy.writeFile('src/fixtures/product-data.json', { productId });\n});\n//Choose reuse market\ncy.get('kendo-dropdownlist[name=\"ReuseMarket\"]').click(); // NODATACY\ncy.get('.k-list-item').contains('SVOD').click(); // NODATACY\n//set release date\ncy.get('#datepicker-4').clear(); // NODATACY\ncy.get('#datepicker-4').type('03/12/2024');\ncy.get('#datepicker-4').blur();\n//Click button 'Add Release Date'\ncy.get('[class=\"btn btn-primary\"]').contains('Add Release Date').should('be.visible').click(); // NODATACY\ncy.contains('button', \"Yes, I'm sure\", { timeout: 10000 }).should('be.visible').click(); // NODATACY\n//Trigger\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId;\n    //  navigateToTrigger();\n    cy.visit('resid/trigger-search/revenuetriggers');\n    //Go to Usage Triggers tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Triggers', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Triggers').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, click\n    cy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-btn\"]').click();\n    cy.get('kendo-grid').should('exist');\n    cy.get('table') // NODATACY\n        .find('td') // Find all table cells\n        .filter(':contains(\"SB\")') // Filter cells that contain \"SB\"\n        .each(($el) => {\n        cy.wrap($el).click(); // Click on the cell containing \"SB\"\n        // Ensure the popup appears and click \"Yes\"\n        cy.get('kendo-dialog-actions button', { timeout: 30000 })\n            .contains('Yes', { timeout: 30000 })\n            .should('be.visible')\n            .click({ force: true });\n    });\n    //check the checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Click the \"Approve\" button\n    cy.get('[data-cy=\"approve-btn\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"approve-btn\"]').click({ force: true });\n    // Verify feedback notification appears\n    cy.contains('Status Updated successfully.', { timeout: 30000 }).should('be.visible'); // NODATACY\n});\n//Obligation\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    //  navigateToObligations();\n    cy.visit('resid/guild-obligations/financeobligations');\n    // Go to Usage Obligations tab\n    cy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Usage Obligations', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"nav-link\"]').contains('Usage Obligations').click({ force: true });\n    // Verify that the Product ID input field is visible, input product ID\n    cy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n    // Verify that the search button is visible, then click\n    cy.get('[data-cy=\"search-button\"]', { timeout: 30000 }).should('be.visible');\n    cy.get('[data-cy=\"search-button\"]').click();\n    // Ensure that the expected obligation record appears\n    cy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n    // Select all records in the grid by checking the master checkbox\n    cy.get('#mastercheck').check(); // NODATACY\n    // Verify that the \"Approve\" button is visible, then clcik\n    cy.get('[class=\"btn btn-primary\"]', { timeout: 30000 }).contains('Approve', { timeout: 30000 }).should('be.visible'); // NODATACY\n    cy.get('[class=\"btn btn-primary\"]').contains('Approve').click({ force: true });\n    // Verify that the success message confirming the update is displayed\n    cy.contains('Record(s) Updated', { timeout: 30000 }).should('be.visible'); // NODATACY\n});\n//navigate To Payments\ncy.visit('resid/residuals-payment');\n// Verify that the Product ID input field is visible, input product ID\ncy.get('[data-cy=\"product-id-input\"]', { timeout: 30000 }).should('be.visible');\ncy.fixture('product-data.json').then((data) => {\n    const productId = data.productId; // Get product ID from JSON\n    cy.get('[data-cy=\"product-id-input\"]').type(productId);\n});\n// Verify that the search button is visible and click it\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click();\n// Verify that the search results contain 'SAG-AFTRA'\ncy.contains('SAG-AFTRA', { timeout: 30000 }).should('be.visible'); // NODATACY\n// Verify the \"Expand Details\" button is visible and click the first instance\ncy.get('a[title=\"Expand Details\"]', { timeout: 30000 }).should('be.visible');\ncy.get('a[title=\"Expand Details\"]').first().click();\n// Ensure the column headers are loaded properly\ncy.get('[role=\"columnheader\"]', { timeout: 30000 }).should('be.visible');\n// Verify that the specific cell (column index 1) contains a value\ncy.get('td[data-kendo-grid-column-index=\"3\"] span').invoke('text').should('not.be.empty');\n// Log and display the extracted cell value\ncy.get('td[data-kendo-grid-column-index=\"3\"] span')\n    .invoke('text')\n    .then((text) => {\n    cy.log('Cell value:', text);\n    console.log('Cell value:', text);\n});",
              "err": {},
              "uuid": "4ef52758-7054-476f-88da-352d6f102908",
              "parentUUID": "cb81c0af-d8c2-4588-bcda-f32e5c93da12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ef52758-7054-476f-88da-352d6f102908"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120755,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d52d13f-3846-4111-989b-2feb9d898188",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-product-TC001.cy.ts",
      "file": "src\\e2e\\kl\\residuals-product-TC001.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a2a8138-0057-424a-a090-7fece506dd10",
          "title": "Residual-Product",
          "fullFile": "src\\e2e\\kl\\residuals-product-TC001.cy.ts",
          "file": "src\\e2e\\kl\\residuals-product-TC001.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC001",
              "fullTitle": "Residual-Product TC001",
              "timedOut": null,
              "duration": 50121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated : Aiman(26/2/2025)\nHigh Level Test Steps:\n\"1. Verify that up on cloning a  product, even the Gross Comp, Pensionable Comp and Pension Ceiling are getting cloned\nExpected: -\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'VICE MEDIA ACQUISITION LLC');\ncy.get('input[name=\"productID\"]').clear().type('18600-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('not.have.value', ''); //NODATACY\n// Navigate to Cast List Tab\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').click({ force: true }); //NODATACY\ncy.get('[class=\"section-header card-header\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('div')\n    .contains('SAG-AFTRA')\n    .parent()\n    .within(() => {\n    cy.get('table.k-grid-table').within(() => {\n        cy.get('tr.k-master-row')\n            .first()\n            .within(() => {\n            cy.get('td').last().find('i').contains('View').should('be.visible');\n            cy.get('td').last().find('i').contains('View').click();\n        });\n    });\n});\ncy.contains('RESIDUAL TALENT DETAILS', { timeout: 30000 });\n//Verify the Talent Name\ncy.get('[data-cy=\"talent-name\"]', { timeout: 30000 }).should('be.visible');\n//Navigate to Compensation\ncy.contains('Compensation', { timeout: 30000 }).should('be.visible');\ncy.contains('Compensation', { timeout: 30000 }).click();\n// Ensure Compensation input is not empty\ncy.get('input[name=\"initialComp\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"initialComp\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\n// Save Gross Compensation value\ncy.contains('.col-sm-5', 'Gross Compensation')\n    .parent()\n    .find('input[name=\"initialComp\"]', { timeout: 30000 }) //NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((value) => {\n    cy.wrap(value).as('grossCompValue');\n});\n// Save Pensionable Compensation value\ncy.contains('.col-sm-5', 'Pensionable Compensation', { timeout: 30000 })\n    .parent()\n    .find('input[name=\"initialComp\"]') //NODATACY\n    .should('be.visible')\n    .invoke('val')\n    .then((value) => {\n    cy.wrap(value).as('penCompValue');\n});\n// Save Pension Ceiling value\ncy.contains('.col-sm-5', 'Pension Ceiling')\n    .parent()\n    .find('input[name=\"pensionCeiling\"]', { timeout: 30000 })\n    .should('be.visible')\n    .invoke('val')\n    .then((value) => {\n    cy.wrap(value).as('penCeilValue'); // Store the value\n});\ncy.contains('Return to Cast List', { timeout: 30000 }).should('be.visible');\ncy.contains('Return to Cast List', { timeout: 30000 }).click();\ncy.contains('Residual Details', { timeout: 30000 }).should('be.visible');\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Product Master').should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Product Master').click(); //NODATACY\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible').should('not.have.value', ''); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('not.have.value', ''); //NODATACY\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone', { timeout: 10000 }).click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('not.have.value', ''); //NODATACY\n//Type Season Number\ncy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\nconst randomNumber = Math.floor(10 + Math.random() * 990);\ncy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n// Store new data for verification\nconst updatedEpisodeName = 'Testing Journey';\ncy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible').clear().type(updatedEpisodeName, { delay: 100 });\ncy.fixture('productEpi.json').then((data) => {\n    let updatedEpisodeNumber = (data.lastEpisodeNumberProductSuite + 1).toString();\n    cy.get('[data-cy=\"episode-number-input\"]', { timeout: 10000 })\n        .should('be.visible')\n        .clear()\n        .type(updatedEpisodeNumber, { delay: 100 });\n    // Save the new number back to the fixture file\n    cy.writeFile('src/fixtures/productEpi.json', { lastEpisodeNumberProductSuite: parseInt(updatedEpisodeNumber, 10) });\n});\ncy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\ncy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\n// Check SAG-AFTRA checkbox if not already checked\n/* cy.get(selectors.sagAftraCheckbox).then(($checkbox) => {\n    if (!$checkbox.is(':checked')) {\n        cy.get(selectors.sagAftraCheckbox).check();\n        cy.get(selectors.primaryButton).contains('Save Guilds').should('be.visible').click();\n    }\n}); */\n// Click \"Update Product\"\ncy.contains('Update Product', { timeout: 30000 }).should('be.visible');\ncy.contains('Update Product').click();\n// Verify notification\ncy.contains('Product updated', { timeout: 30000 }).should('be.visible');\ncy.reload();\n// Navigate to Cast List Tab\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').click({ force: true }); //NODATACY\ncy.get('[class=\"section-header card-header\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('div')\n    .contains('SAG-AFTRA')\n    .parent()\n    .within(() => {\n    cy.get('table.k-grid-table').within(() => {\n        cy.get('tr.k-master-row')\n            .first()\n            .within(() => {\n            cy.get('td').last().find('i').contains('View').should('be.visible');\n            cy.get('td').last().find('i').contains('View').click();\n        });\n    });\n});\ncy.contains('RESIDUAL TALENT DETAILS', { timeout: 30000 });\ncy.contains('Compensation', { timeout: 30000 }).should('be.visible');\ncy.contains('Compensation', { timeout: 30000 }).click();\ncy.get('input[name=\"initialComp\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\ncy.get('input[name=\"initialComp\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\ncy.then(function () {\n    cy.log('Gross Compensation:', this.grossCompValue);\n    cy.log('Pensionable Compensation:', this.penCompValue);\n    cy.log('Pension Ceiling:', this.penCeilValue);\n    expect(this.grossCompValue).to.not.be.empty;\n    expect(this.penCompValue).to.not.be.empty;\n    expect(this.penCeilValue).to.not.be.empty;\n});",
              "err": {},
              "uuid": "784cef0b-9ca2-4787-aecc-e0c9c9a44ec3",
              "parentUUID": "1a2a8138-0057-424a-a090-7fece506dd10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "784cef0b-9ca2-4787-aecc-e0c9c9a44ec3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4793f23c-fc4e-4a9d-8175-7e6dd873ac08",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-product-TC002.cy.ts",
      "file": "src\\e2e\\kl\\residuals-product-TC002.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79034288-7d5e-499f-abbb-aee52cb069d1",
          "title": "Residual-Product",
          "fullFile": "src\\e2e\\kl\\residuals-product-TC002.cy.ts",
          "file": "src\\e2e\\kl\\residuals-product-TC002.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC062",
              "fullTitle": "Residual-Product TC062",
              "timedOut": null,
              "duration": 35220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated: Aiman (26/2/2025)\nHigh Level Test Steps:\n2. Verify that any updates/delete/added to Product Master - Cast List - Guild Discount % are updated in audit log\nExpected: Changes should reflect in the audit log.\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'VICE MEDIA ACQUISITION LLC');\ncy.get('input[name=\"productID\"]').clear().type('18600-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('not.have.value', ''); //NODATACY\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone', { timeout: 10000 }).click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('not.have.value', ''); //NODATACY\n// Store new data for verification\nconst updatedEpisodeName = 'Testing Journey';\ncy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible').clear().type(updatedEpisodeName, { delay: 100 }); //NODATACY\n//Type Season Number\ncy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\nconst randomNumber = Math.floor(10 + Math.random() * 990);\ncy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\ncy.fixture('productEpi.json').then((data) => {\n    let updatedEpisodeNumber = (data.lastEpisodeNumberProductSuite + 1).toString();\n    cy.get('[data-cy=\"episode-number-input\"]', { timeout: 10000 })\n        .should('be.visible')\n        .clear()\n        .type(updatedEpisodeNumber, { delay: 100 });\n    // Save the new number back to the fixture file\n    cy.writeFile('src/fixtures/productEpi.json', { lastEpisodeNumberProductSuite: parseInt(updatedEpisodeNumber, 10) });\n    cy.wrap(updatedEpisodeNumber).as('updatedEpisodeNumber');\n});\ncy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\ncy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\n// Click \"Update Product\"\ncy.contains('Update Product', { timeout: 30000 }).should('be.visible');\ncy.contains('Update Product', { timeout: 30000 }).click();\n// Verify notification\ncy.contains('Product updated', { timeout: 30000 }).should('be.visible');\ncy.reload();\n// Navigate to Cast List Tab\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]').contains('Cast List').click({ force: true }); //NODATACY\ncy.get('[class=\"section-header card-header\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.contains('SAG-AFTRA', { timeout: 30000 }).parent().find('button').contains('Discount %').should('be.visible');\ncy.contains('SAG-AFTRA').parent().find('button').contains('Discount %').click();\n// Update Discount\nconst updatedDiscount = '10';\ncy.get('input[name=\"Discount\"]', { timeout: 30000 }).clear().type(updatedDiscount, { delay: 100 }); //NODATACY\nlet selectedMarkets = ['PayTV', 'AVOD', 'InFlight'];\ncy.get('input[name=\"reuseMarketName\"]', { timeout: 30000 }).each(($checkbox) => {\n    cy.wrap($checkbox)\n        .parent()\n        .invoke('text')\n        .then((text) => {\n        const marketName = text.trim();\n        if (selectedMarkets.includes(marketName)) {\n            cy.wrap($checkbox).check();\n        }\n    });\n});\n// Apply Discount\ncy.contains('Apply Discount', { timeout: 60000 }).should('be.visible');\ncy.contains('Apply Discount').click({ force: true });\ncy.contains('Saved successfully.', { timeout: 30000 }).should('be.visible');\ncy.contains('Audit Log', { timeout: 30000 }).scrollIntoView().should('be.visible').click();\ncy.contains('Audit Log').click();\ncy.get('[class=\"table table-striped table-bordered\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"table table-striped table-bordered\"]', { timeout: 30000 }).within(() => {\n    //NODATACY\n    cy.contains('td', 'Product Updated').should('be.visible');\n    const formattedMarkets = selectedMarkets.join(',');\n    cy.contains('td', `Discount Percentage added/updated to : '10' , for Reuse Markets '${formattedMarkets}'`).should('be.visible');\n    cy.contains('td', \"changed 'EpisodeName' from '' to 'Testing Journey'\").should('be.visible');\n    cy.get('@updatedEpisodeNumber').then((episodeNumber) => {\n        cy.contains('td', `changed 'EpisodeNumber' from '' to '${episodeNumber}'`).should('be.visible');\n    });\n});",
              "err": {},
              "uuid": "48188fa4-df52-4fc1-9a5a-4b7c95df2fb2",
              "parentUUID": "79034288-7d5e-499f-abbb-aee52cb069d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48188fa4-df52-4fc1-9a5a-4b7c95df2fb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35220,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "73e9d357-4403-434b-b35a-1ab8797062d7",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-product-TC003.cy.ts",
      "file": "src\\e2e\\kl\\residuals-product-TC003.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "300021e5-c8a7-4a74-8d3d-a8665a284053",
          "title": "Residual-Product",
          "fullFile": "src\\e2e\\kl\\residuals-product-TC003.cy.ts",
          "file": "src\\e2e\\kl\\residuals-product-TC003.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC063",
              "fullTitle": "Residual-Product TC063",
              "timedOut": null,
              "duration": 28407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated: Aiman (27/2/2025)\nHigh Level Test Steps:\n3. Verify that user is able to select the Class= Single Motion Picture\n    and create a product from Made for Markets = Basic Cable & New Media\nExpected:\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.selectKendoDropdownListItem('customer-dropdown', 'VICE MEDIA ACQUISITION LLC');\ncy.get('input[name=\"productID\"]').clear().type('18600-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]').should('not.have.value', ''); //NODATACY\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone', { timeout: 10000 }).click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]').should('not.have.value', ''); //NODATACY\n// Store new data for verification\nconst updatedEpisodeName = 'Testing Journey';\ncy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible').clear().type(updatedEpisodeName, { delay: 100 }); //NODATACY\n// Verify label for \"Made For Market\"\ncy.contains('Made For Market', { timeout: 10000 }).should('be.visible');\ncy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\ncy.get('[name=\"productMaster.className\"]').should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.className\"]').click(); //NODATACY\ncy.get('.k-list-item').contains('Single Motion Picture').click();\nconst updatedRandomID = Math.floor(20000 + Math.random() * 60000).toString();\ncy.get('[name=\"productMaster.seriesID\"]').click().clear().type(updatedRandomID, { delay: 100 }); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]').click().clear().type(updatedRandomID, { delay: 100 }); //NODATACY\ncy.get('[name=\"productMaster.productID\"]').click().clear().type(updatedRandomID, { delay: 100 }); //NODATACY\ncy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\ncy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('09/12/2024', { delay: 100 });\n// Click \"Update Product\"\ncy.contains('Update Product', { timeout: 30000 }).should('be.visible');\ncy.contains('Update Product').click();\ncy.contains('Product updated', { timeout: 30000 }).should('be.visible');",
              "err": {},
              "uuid": "3d4c1634-3222-40eb-8f97-196a33deaab8",
              "parentUUID": "300021e5-c8a7-4a74-8d3d-a8665a284053",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d4c1634-3222-40eb-8f97-196a33deaab8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89b290eb-e54a-4ad5-8a86-ff2ed04c25ca",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-product-TC004.cy.ts",
      "file": "src\\e2e\\kl\\residuals-product-TC004.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b657c625-6d79-4bbd-90e9-d140178d5e21",
          "title": "Residual-Product",
          "fullFile": "src\\e2e\\kl\\residuals-product-TC004.cy.ts",
          "file": "src\\e2e\\kl\\residuals-product-TC004.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC064",
              "fullTitle": "Residual-Product TC064",
              "timedOut": null,
              "duration": 31964,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated: Aiman (27/2/2025)\nHigh Level Test Steps:\n4. Verify that user is able to create a product for HBAVOD and the subscriber count  is the value from Manage services\nExpected:\n*/\ncy.visit('resid/residuals-admin');\ncy.contains('Residual Admin', { timeout: 10000 }).should('be.visible');\ncy.contains('Residual Admin').click();\ncy.get('[data-cy=\"admin-action-select\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"admin-action-select\"]').select('Manage Services');\nlet matchCount = 0;\nconst expectedData = [\n    { label: 'Service ID', value: '32' },\n    { label: 'Service', value: 'HBAVOD', alias: 'savedHBAVOD' },\n    { label: 'Platform', value: 'TUBI', alias: 'savedTUBI' },\n    { label: 'Subscriber Count', value: '20,000,001', alias: 'savedValue' },\n    { label: 'Start Date', value: '07/01/2023' },\n    { label: 'End Date', value: '06/30/2024' }\n];\nexpectedData.forEach((item) => {\n    cy.get('td')\n        .contains(item.value)\n        .should('exist')\n        .then(($el) => {\n        matchCount++;\n        if (item.alias) {\n            cy.wrap($el.text().trim().replace(/,/g, '')).as(item.alias);\n        }\n    });\n});\ncy.then(() => {\n    if (matchCount === expectedData.length) {\n        cy.visit('resid/residuals-search');\n    }\n    else {\n        throw new Error('One or more expected values not found in the table.');\n    }\n});\ncy.get('div[role=\"grid\"]', { timeout: 30000 }).should('be.visible');\ncy.selectKendoDropdownListItem('customer-dropdown', 'VICE MEDIA ACQUISITION LLC');\ncy.get('input[name=\"productID\"]').clear().type('18600-01-00101').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]', { timeout: 30000 }).should('be.visible');\ncy.get('[data-cy=\"search-btn\"]').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible');\ncy.get('input[data-cy=\"episode-number-input\"]').should('not.have.value', '');\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone').click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]').should('not.have.value', ''); //NODATACY\n// Store new data for verification\nconst updatedEpisodeName = 'Testing Journey';\ncy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible').clear().type(updatedEpisodeName, { delay: 100 });\n// Verify label for \"Made For Market\"\ncy.contains('Made For Market', { timeout: 10000 }).should('be.visible');\ncy.selectKendoDropdownListItem('made-for-market-select', 'New Media');\ncy.contains('Sub-Market', { timeout: 10000 }).should('be.visible');\ncy.get('[name=\"productMaster.subMarket\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.subMarket\"]').click(); //NODATACY\ncy.get('.k-list-item').contains('HBAVOD').click();\ncy.contains('Class', { timeout: 10000 }).should('be.visible');\ncy.get('[name=\"productMaster.className\"]').should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.className\"]').click(); //NODATACY\ncy.get('.k-list-item').contains('Series').click();\nconst updatedRandomID = Math.floor(100 + Math.random() * 999).toString();\ncy.get('[data-cy=\"season-number-input\"]').click().clear().type(updatedRandomID, { delay: 100 });\ncy.fixture('productEpi.json').then((data) => {\n    let updatedEpisodeNumber = (data.lastEpisodeNumberProductSuite + 1).toString();\n    cy.get('[data-cy=\"episode-number-input\"]', { timeout: 10000 })\n        .should('be.visible')\n        .clear()\n        .type(updatedEpisodeNumber, { delay: 100 });\n    cy.writeFile('src/fixtures/productEpi.json', { lastEpisodeNumberProductSuite: parseInt(updatedEpisodeNumber, 10) });\n});\ncy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('07/01/2023', { delay: 100 });\ncy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('07/01/2023', { delay: 100 });\ncy.get('[name=\"initialReleaseDate\"] input', { timeout: 10000 }) //NODATACY\n    .should('be.visible')\n    .clear()\n    .type('07/01/2023', { delay: 100 });\ncy.get('kendo-dropdownlist[name=\"serviceName\"]', { timeout: 30000 }).click();\ncy.get('.k-list-item', { timeout: 30000 }).contains('TUBI').click();\ncy.contains('WGA', { timeout: 30000 }).should('be.visible');\ncy.contains('SAG/DGA', { timeout: 30000 }).should('be.visible');\ncy.get('[name=\"productMaster.wgaSubscriberCount\"]', { timeout: 30000 }).should('have.value', '20000001');\ncy.get('[name=\"productMaster.sagdgaaftraSubscriberCount\"]', { timeout: 30000 }).should('have.value', '20000001');\ncy.get('@savedHBAVOD').then((hbavod) => {\n    cy.contains(hbavod).should('exist');\n});\ncy.get('@savedTUBI').then((tubi) => {\n    cy.contains(tubi).should('exist');\n});\ncy.get('@savedValue').then((value) => {\n    cy.get('[name=\"productMaster.wgaSubscriberCount\"]', { timeout: 30000 }).should('have.value', value);\n    cy.get('[name=\"productMaster.sagdgaaftraSubscriberCount\"]', { timeout: 30000 }).should('have.value', value);\n});\ncy.contains('Update Product', { timeout: 30000 }).should('be.visible');\ncy.contains('Update Product', { timeout: 30000 }).click();\ncy.contains('Product updated', { timeout: 30000 }).should('be.visible');",
              "err": {},
              "uuid": "e1815ffb-421e-4554-b297-8321b45de2f2",
              "parentUUID": "b657c625-6d79-4bbd-90e9-d140178d5e21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1815ffb-421e-4554-b297-8321b45de2f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31964,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b0b4c35e-fd13-4482-9572-57dc5e74e09f",
      "title": "",
      "fullFile": "src\\e2e\\kl\\residuals-product-TC005.cy.ts",
      "file": "src\\e2e\\kl\\residuals-product-TC005.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "51ab2d3a-dd1e-4275-b74c-71188a674026",
          "title": "Residual-Product",
          "fullFile": "src\\e2e\\kl\\residuals-product-TC005.cy.ts",
          "file": "src\\e2e\\kl\\residuals-product-TC005.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC065",
              "fullTitle": "Residual-Product TC065",
              "timedOut": null,
              "duration": 37565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\nModule: Residual - Product\nLast Updated: Aiman (27/2/2025)\nHigh Level Test Steps:\n5. Verify user is not returned with any error when trying to navigate to previous screen when adding new talent to a cast list\nExpected:\n*/\ncy.visit('resid/residuals-search');\ncy.get('div[role=\"grid\"]', { timeout: 30000 }).should('be.visible');\ncy.selectKendoDropdownListItem('customer-dropdown', 'Legendary Television LLC');\ncy.get('input[name=\"productID\"]', { timeout: 30000 }).clear().type('18056-03-00301').blur(); //NODATACY\n//Search Button\ncy.get('[data-cy=\"search-btn\"]').should('be.visible').click({ force: true });\ncy.get('tr[role=\"row\"][aria-rowindex=\"2\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\n//find Valid Product ID\nclickValidProductID();\ncy.contains('Residual Details', { timeout: 30000 });\n//verify data finish loading\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('input[data-cy=\"episode-number-input\"]', { timeout: 30000 }).should('not.have.value', ''); //NODATACY\n//click clone button\ncy.contains('Clone', { timeout: 10000 }).should('be.visible');\ncy.contains('Clone', { timeout: 10000 }).click({ force: true });\n//verify update product master page\ncy.contains('Please update the required fields of the Product Master before proceeding!', { timeout: 30000 }).should('be.visible');\n//verify data finish loading\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\ncy.get('[name=\"productMaster.seasonID\"]', { timeout: 10000 }).should('not.have.value', ''); //NODATACY\n//update Product Details\ncy.readFile('src/fixtures/episode-data.json').then((data) => {\n    const newEpisodeNumber = data.lastEpisodeNumber + 1;\n    // Type episode name\n    cy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).should('be.visible'); //NODATACY\n    cy.get('[name=\"EpisodeName\"]', { timeout: 10000 }).type('Testing Adventure', { delay: 100 }); //NODATACY\n    //Type new episode number\n    cy.get('[data-cy=\"episode-number-input\"]').type(newEpisodeNumber.toString(), { delay: 100 });\n    //Type Season Number\n    cy.get('[data-cy=\"season-number-input\"]', { timeout: 50000 }).should('be.visible').clear();\n    const randomNumber = Math.floor(100 + Math.random() * 900);\n    cy.get('[data-cy=\"season-number-input\"]').type(randomNumber.toString());\n    //Insert Principal Photo Date and WGA Contract Date\n    cy.get('[name=\"principalPhotoDate\"] input', { timeout: 10000 }).clear().type('06032015', { delay: 100 }); //NODATACY\n    cy.get('[name=\"wgaContractDate\"] input', { timeout: 10000 }).clear().type('07302025', { delay: 100 }); //NODATACY\n    //Update Product Button\n    cy.get('[data-cy=\"update-product-btn\"]', { timeout: 10000 }).should('be.visible');\n    cy.get('[data-cy=\"update-product-btn\"]', { timeout: 10000 }).contains('Update Product').click();\n    // Update fixture file with new episode number\n    cy.writeFile('src/fixtures/episode-data.json', { lastEpisodeNumber: newEpisodeNumber });\n    //verify Notification\n    cy.contains('Product updated', { timeout: 60000 }).should('be.visible');\n    cy.reload();\n    cy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\n    cy.get('input[name=\"productMaster.productID\"]', { timeout: 60000 }).should('not.have.value', ''); //NODATACY\n});\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.get('[class=\"nav-link\"]', { timeout: 30000 }).contains('Cast List').click({ force: true }); //NODATACY\ncy.get('[class=\"section-header card-header\"]', { timeout: 30000 }).should('be.visible'); //NODATACY\ncy.contains('SAG-AFTRA', { timeout: 30000 }).parent().find('button').contains('Add Cast').should('be.visible').click();\ncy.contains('New Talent', { timeout: 30000 }).should('be.visible').click();\ncy.get('[class=\"modal-body ng-star-inserted\"]', { timeout: 60000 }).should('be.visible'); //NODATACY\n//cy.get('[type=\"radio\"]', { timeout: 60000 }).eq(0).should('be.visible').click({force:true}); //NODATACY\ncy.get('input[name=\"newpayee\"][value=\"uscitizen\"]').should('exist').check({ force: true });\ncy.get('[role=\"combobox\"]', { timeout: 30000 }).eq(4).should('be.visible').click(); //NODATACY\ncy.get('.k-list-item') // Target the dropdown options\n    .contains('UsaSsn') // Find the option with the text \"UsaSsn\"\n    .should('be.visible')\n    .click();\nconst updatedRandomID = Math.floor(100000000 + Math.random() * 900000000).toString();\ncy.get('[name=\"newPayee.taxId\"]', { timeout: 30000 }).should('be.visible').type(updatedRandomID, { delay: 100 }); //NODATACY\ncy.get('[name=\"firstName\"]', { timeout: 30000 }).should('be.visible').clear().type('Robert'); //NODATACY\ncy.get('[name=\"lastName\"]', { timeout: 30000 }).should('be.visible').clear().type('Downey'); //NODATACY\nconst selectedDate = '04/04/1965';\ncy.get('input[id=\"datepicker-5\"]') //NODATACY\n    .should('be.visible')\n    .clear()\n    .type(selectedDate, { delay: 100 })\n    .blur();\ncy.get('input[name=\"line1\"]').type('742 Evergreen Terrace'); //NODATACY\ncy.get('input[name=\"line2\"]').type('Apt 5B'); //NODATACY\ncy.get('input[name=\"city\"]').type('Springfield'); //NODATACY\n// Selecting a state from the Kendo Dropdown\ncy.get('[role=\"combobox\"]').eq(7).click();\ncy.contains('Illinois').click();\ncy.get('input[name=\"newAddress.zip\"]').type('62704'); //NODATACY\ncy.contains('Continue', { timeout: 30000 }).should('be.visible').click();\ncy.get('[class=\"modal-body\"]', { timeout: 60000 }).should('be.visible');\ncy.contains('Add Residual Talent Details', { timeout: 30000 }).scrollIntoView().should('be.visible');\ncy.contains('Previous', { timeout: 30000 }).scrollIntoView().should('be.visible');\ncy.contains('Previous', { timeout: 30000 }).click();\ncy.get('[class=\"modal-body ng-star-inserted\"]', { timeout: 60000 }).scrollIntoView().should('be.visible'); //NODATACY",
              "err": {},
              "uuid": "c524461a-5196-4425-8b34-33fca2554c13",
              "parentUUID": "51ab2d3a-dd1e-4275-b74c-71188a674026",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c524461a-5196-4425-8b34-33fca2554c13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37565,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c73ed261-32c7-4791-80bf-19713b6bf58f",
      "title": "",
      "fullFile": "src\\e2e\\blr\\residuals-rulesforforeignmarket-XPCPP-1240.cy.ts",
      "file": "src\\e2e\\blr\\residuals-rulesforforeignmarket-XPCPP-1240.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7822efa0-8299-4ffc-a5f6-a45871385c11",
          "title": "Residuals Rules generation",
          "fullFile": "src\\e2e\\blr\\residuals-rulesforforeignmarket-XPCPP-1240.cy.ts",
          "file": "src\\e2e\\blr\\residuals-rulesforforeignmarket-XPCPP-1240.cy.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "XPCPP-1240 - Rules generation for foreign markets",
              "fullTitle": "Residuals Rules generation XPCPP-1240 - Rules generation for foreign markets",
              "timedOut": null,
              "duration": 101148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Module: Residual - Rules Generation\n     Last Updated: Prathima V (5/13/2025)\n    High-Level Test Steps:\n    1. Verify if the user is able to generate rules for foreign markets\n    2. Validate table rows for each dropdown option.\n*/\nconst dropdownOptions = ['Theatrical', 'Free TV', 'New Media', 'Basic Cable'];\ndropdownOptions.forEach((option) => {\n    cy.visit('resid/residuals-search', { timeout: 40000 });\n    // Select the dropdown option\n    selectDropdownOption(option);\n    cy.get(\"button[data-cy='search-btn']\").should('be.visible').click({ force: true });\n    // Perform actions after selecting the option\n    performActionsAfterSelection();\n    cy.log(`Successfully processed dropdown option: ${option}`);\n    if (option === 'Theatrical') {\n        const expectedString = [\n            'ForeignBasic',\n            'ForeignAVOD',\n            'ForeignDTR',\n            'ForeignEST',\n            'ForeignFreeTV',\n            'ForeignHMVideo',\n            'ForeignPay',\n            'FSVOD',\n            'ForeignVOD'\n        ];\n        validateForeignMarkets(expectedString, 15, 23);\n    }\n    else if (option === 'Free TV') {\n        const expectedString = [\n            'ForeignDTR',\n            'ForeignEST',\n            'ForeignHMVideo',\n            'ForeignInFlight',\n            'ForeignPay',\n            'FSVOD',\n            'ForeignVOD'\n        ];\n        validateForeignMarkets(expectedString, 17, 23);\n    }\n    else if (option === 'New Media') {\n        const expectedString = ['ForeignDTR', 'ForeignEST', 'ForeignHMVideo', 'ForeignInFlight', 'ForeignPay', 'ForeignVOD'];\n        validateForeignMarkets(expectedString, 19, 24);\n    }\n    else if (option === 'Basic Cable') {\n        cy.get('h4.section-header.card-header', { timeout: 40000 })\n            .invoke('text')\n            .then((savedValue) => {\n            const trimmedValue = savedValue.trim();\n            cy.log(`Saved value: ${trimmedValue}`);\n            if (trimmedValue.includes('AFTRA')) {\n                cy.log('There are no foreign reuse markets for AFTRA guilds.');\n            }\n            else {\n                const expectedString = [\n                    'ForeignDTR',\n                    'ForeignEST',\n                    'ForeignHMVideo',\n                    'ForeignInFlight',\n                    'ForeignPay',\n                    'FSVOD',\n                    'ForeignVOD'\n                ];\n                validateForeignMarkets(expectedString, 17, 23);\n            }\n        });\n    }\n});",
              "err": {},
              "uuid": "92644cd8-4332-445b-a2a1-8db127cd3ade",
              "parentUUID": "7822efa0-8299-4ffc-a5f6-a45871385c11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92644cd8-4332-445b-a2a1-8db127cd3ade"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "..\\..\\..\\..\\cypress\\results\\mochawesome\\ui\\payroll\\residuals\\.jsons",
        "charts": true,
        "reportPageTitle": "ER Test Suite - UI - Payroll/Residuals",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveJson": true,
        "ignoreVideos": false,
        "saveAllAttempts": false,
        "videoOnFailOnly": false,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}